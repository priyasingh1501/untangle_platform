{"ast":null,"code":"import _objectSpread from\"/Users/priyas/Desktop/untangle-platform/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useMemo}from'react';import{motion}from'framer-motion';import{Search,Save}from'lucide-react';import{useAuth}from'../../contexts/AuthContext';import{buildApiUrl}from'../../config';import toast from'react-hot-toast';import{Card,Button}from'../ui';import FoodSearch from'./FoodSearch';import MealItems from'./MealItems';import MealContext from'./MealContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MealBuilder=_ref=>{let{onMealSaved}=_ref;const{token}=useAuth();const[searchQuery,setSearchQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[isSearching,setIsSearching]=useState(false);const[hasSearched,setHasSearched]=useState(false);const[mealItems,setMealItems]=useState([]);const[context,setContext]=useState({lateNightEating:false,sedentaryAfterMeal:false,stressEating:false,packagedStoredLong:false,mindlessEating:false});const[isSaving,setIsSaving]=useState(false);// Indian portion units with their gram equivalents\nconst indianPortionUnits=useMemo(()=>[{unit:'katori',label:'Katori',grams:80,description:'Small bowl'},{unit:'bowl',label:'Bowl',grams:150,description:'Medium bowl'},{unit:'piece',label:'Piece',grams:50,description:'Standard piece'},{unit:'spoon',label:'Spoon',grams:15,description:'Tablespoon'},{unit:'roti',label:'Roti',grams:45,description:'Flatbread'},{unit:'idli',label:'Idli',grams:120,description:'Steamed rice cake'},{unit:'cup',label:'Cup',grams:200,description:'Standard cup'},{unit:'handful',label:'Handful',grams:30,description:'Handful'}],[]);// Search for foods using multi-source search with fallback\nconst searchFoods=useCallback(async query=>{if(!query.trim()||!token)return;setIsSearching(true);try{// Try multi-source search first (POST endpoint)\nconsole.log('🔍 Attempting multi-source search for:',query.trim());const response=await fetch(buildApiUrl('/api/food/search'),{method:'POST',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'},body:JSON.stringify({query:query.trim(),source:'combined',// Search all sources: local, USDA, and OpenFoodFacts\nlimit:20})});if(response.ok){const data=await response.json();console.log('🔍 Multi-source search response:',data);// The POST endpoint returns 'results' with multi-source data\nconst results=data.results||[];console.log('📊 Raw results:',results);if(results.length>0){// Transform results to match expected format\nconst foods=results.map(result=>{// Handle different source formats\nif(result.source==='IFCT'){// Local database food\nreturn{_id:result.id||result._id,name:result.name,source:'IFCT',// Use consistent source name\nportionGramsDefault:result.portionGramsDefault||100,nutrients:result.nutrients||result.nutriments100g,tags:result.tags||[],gi:result.gi,fodmap:result.fodmap,novaClass:result.novaClass,aliases:result.aliases||[],provenance:result.provenance||{source:'Local Database'}};}else if(result.source==='usda'){var _result$nutriments,_result$nutriments2,_result$nutriments3,_result$nutriments4,_result$nutriments5,_result$nutriments6;// USDA food\nreturn{_id:result.id,name:result.name,source:'USDA',portionGramsDefault:100,nutrients:{kcal:((_result$nutriments=result.nutriments100g)===null||_result$nutriments===void 0?void 0:_result$nutriments.kcal)||0,protein:((_result$nutriments2=result.nutriments100g)===null||_result$nutriments2===void 0?void 0:_result$nutriments2.protein)||0,fat:((_result$nutriments3=result.nutriments100g)===null||_result$nutriments3===void 0?void 0:_result$nutriments3.fat)||0,carbs:((_result$nutriments4=result.nutriments100g)===null||_result$nutriments4===void 0?void 0:_result$nutriments4.carbs)||0,fiber:((_result$nutriments5=result.nutriments100g)===null||_result$nutriments5===void 0?void 0:_result$nutriments5.fiber)||0,sugar:((_result$nutriments6=result.nutriments100g)===null||_result$nutriments6===void 0?void 0:_result$nutriments6.sugar)||0,vitaminC:0,zinc:0,selenium:0,iron:0,omega3:0},tags:[],brand:result.brand,relevanceScore:result.relevanceScore,provenance:result.provenance||{source:'USDA Database'}};}else if(result.source==='off'){var _result$nutriments7,_result$nutriments8,_result$nutriments9,_result$nutriments0,_result$nutriments1,_result$nutriments10;// OpenFoodFacts food\nreturn{_id:result.id,name:result.name,source:'OpenFoodFacts',portionGramsDefault:100,nutrients:{kcal:((_result$nutriments7=result.nutriments100g)===null||_result$nutriments7===void 0?void 0:_result$nutriments7.kcal)||0,protein:((_result$nutriments8=result.nutriments100g)===null||_result$nutriments8===void 0?void 0:_result$nutriments8.protein)||0,fat:((_result$nutriments9=result.nutriments100g)===null||_result$nutriments9===void 0?void 0:_result$nutriments9.fat)||0,carbs:((_result$nutriments0=result.nutriments100g)===null||_result$nutriments0===void 0?void 0:_result$nutriments0.carbs)||0,fiber:((_result$nutriments1=result.nutriments100g)===null||_result$nutriments1===void 0?void 0:_result$nutriments1.fiber)||0,sugar:((_result$nutriments10=result.nutriments100g)===null||_result$nutriments10===void 0?void 0:_result$nutriments10.sugar)||0,vitaminC:0,zinc:0,selenium:0,iron:0,omega3:0},tags:result.tags||[],brand:result.brand,barcode:result.barcode,novaClass:result.novaClass,relevanceScore:result.relevanceScore,provenance:result.provenance||{source:'Open Food Facts'}};}return result;});// Remove duplicates based on name and source\nconst uniqueFoods=foods.reduce((acc,food)=>{const existingFood=acc.find(f=>f._id===food._id||f.name.toLowerCase()===food.name.toLowerCase()&&f.source===food.source);if(!existingFood){acc.push(food);}return acc;},[]);console.log('✅ Multi-source search successful, found:',uniqueFoods.length,'foods');setSearchResults(uniqueFoods);return;}}// Fallback to local search if multi-source search fails or returns no results\nconsole.log('🔄 Multi-source search failed or no results, falling back to local search');const fallbackResponse=await fetch(buildApiUrl(\"/api/food/search?q=\".concat(encodeURIComponent(query.trim()),\"&limit=20\")),{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});if(fallbackResponse.ok){const fallbackData=await fallbackResponse.json();const foods=fallbackData.foods||[];// Transform fallback foods to ensure consistent source information\nconst transformedFoods=foods.map(food=>_objectSpread(_objectSpread({},food),{},{source:'IFCT',// Local database foods are from IFCT\nprovenance:food.provenance||{source:'Local Database'}}));// Remove duplicates based on food ID and name\nconst uniqueFoods=transformedFoods.reduce((acc,food)=>{const existingFood=acc.find(f=>f._id===food._id||f.name.toLowerCase()===food.name.toLowerCase());if(!existingFood){acc.push(food);}return acc;},[]);console.log('✅ Fallback local search successful, found:',uniqueFoods.length,'foods');setSearchResults(uniqueFoods);}else{const errorData=await fallbackResponse.text();console.error('❌ Both searches failed:',response.status,errorData);toast.error(\"Failed to search foods: \".concat(fallbackResponse.status));}}catch(error){console.error('Error searching foods:',error);toast.error('Error searching foods');}finally{setIsSearching(false);}},[token]);// Add food to meal\nconst addFoodToMeal=useCallback(function(food){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Handle different ID formats from different sources\nconst foodId=food._id||food.id||food.barcode;const existingItem=mealItems.find(item=>item.foodId===foodId);// Determine the portion to add - default to 1 katori if no unit specified\nlet portionToAdd=80;// Default to 1 katori (80g)\nlet unitDescription='1 katori';let defaultUnit=indianPortionUnits[0];// Default to katori\nif(selectedUnit){portionToAdd=selectedUnit.grams;unitDescription=\"1 \".concat(selectedUnit.unit);}else{// Use default Indian portion unit (1 katori)\nportionToAdd=defaultUnit.grams;unitDescription=\"1 \".concat(defaultUnit.unit);selectedUnit=defaultUnit;}if(existingItem){// Update existing item\nsetMealItems(prev=>prev.map(item=>item.foodId===foodId?_objectSpread(_objectSpread({},item),{},{grams:item.grams+portionToAdd}):item));const message=selectedUnit?\"Updated \".concat(food.name,\" with +\").concat(unitDescription,\" (\").concat(portionToAdd,\"g)\"):\"Updated \".concat(food.name,\" portion\");toast.success(message);}else{// Add new item\nconst newItem={foodId:foodId,customName:food.name,grams:portionToAdd,food:food,// Store full food object for analysis\nselectedUnit:selectedUnit// Store the selected unit for display\n};setMealItems(prev=>[...prev,newItem]);const message=selectedUnit?\"Added \".concat(food.name,\" (\").concat(unitDescription,\" = \").concat(portionToAdd,\"g)\"):\"Added \".concat(food.name,\" to meal\");toast.success(message);}// Clear search\nsetSearchQuery('');setSearchResults([]);setHasSearched(false);},[mealItems,indianPortionUnits]);// Remove food from meal\nconst removeFoodFromMeal=useCallback(foodId=>{setMealItems(prev=>prev.filter(item=>item.foodId!==foodId));toast.success('Food removed from meal');},[]);// Update food portion\nconst updateFoodPortion=useCallback((foodId,grams)=>{setMealItems(prev=>prev.map(item=>item.foodId===foodId?_objectSpread(_objectSpread({},item),{},{grams:Math.max(0,grams)}):item));},[]);// Save meal\nconst saveMeal=useCallback(async()=>{if(mealItems.length===0){toast.error('Please add at least one food item');return;}setIsSaving(true);try{const mealData={items:mealItems.map(item=>({foodId:item.foodId,grams:item.grams})),context};console.log('MealBuilder: Sending meal data:',mealData);console.log('MealBuilder: Token exists:',!!token);// Show initial loading message\ntoast.loading('Processing meal data...',{id:'meal-saving'});const response=await fetch(buildApiUrl('/api/meals'),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify(mealData)});if(response.ok){await response.json();toast.dismiss('meal-saving');toast.success('Meal saved successfully!');// Clear form\nsetMealItems([]);setContext({lateNightEating:false,sedentaryAfterMeal:false,stressEating:false,packagedStoredLong:false,mindlessEating:false});// Notify parent component to refresh meal data\nif(onMealSaved){console.log('MealBuilder: Meal saved, notifying parent to refresh');onMealSaved();}}else{const errorData=await response.json().catch(()=>({}));console.error('Failed to save meal:',response.status,errorData);toast.dismiss('meal-saving');toast.error(\"Failed to save meal: \".concat(errorData.message||'Unknown error'));}}catch(error){console.error('Error saving meal:',error);toast.dismiss('meal-saving');toast.error(\"Error saving meal: \".concat(error.message));}finally{setIsSaving(false);}},[mealItems,context,token,onMealSaved]);// Handle search input - only update state, don't search\nconst handleSearchInput=e=>{const query=e.target.value;setSearchQuery(query);// Clear results and reset search state when input is empty\nif(!query.trim()){setSearchResults([]);setHasSearched(false);}};// Handle search submit\nconst handleSearchSubmit=e=>{e.preventDefault();if(searchQuery.trim()){setHasSearched(true);searchFoods(searchQuery);}};// Clear search\nconst handleClearSearch=()=>{setSearchQuery('');setSearchResults([]);setHasSearched(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},children:/*#__PURE__*/_jsxs(Card,{title:\"Search & Add Foods\",className:\"h-full\",children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearchSubmit,className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex-1\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 text-text-secondary h-5 w-5\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchQuery,onChange:handleSearchInput,placeholder:\"Search foods...\",className:\"w-full pl-10 pr-4 py-3 bg-background-primary border border-border-primary rounded-xl text-text-primary focus:border-accent focus:outline-none placeholder-text-muted\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!searchQuery.trim(),className:\"px-6 py-3 bg-accent text-white rounded-xl hover:bg-accent/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 font-jakarta text-sm leading-relaxed tracking-wider font-semibold\",children:\"Search\"}),searchQuery&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleClearSearch,className:\"px-4 py-3 bg-background-tertiary text-text-secondary rounded-xl hover:bg-background-tertiary/80 transition-colors duration-200 font-jakarta text-sm leading-relaxed tracking-wider\",children:\"Clear\"})]})}),/*#__PURE__*/_jsx(FoodSearch,{results:searchResults,isSearching:isSearching,hasSearched:hasSearched,onAddFood:addFoodToMeal,searchQuery:searchQuery})]})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{delay:0.1},children:/*#__PURE__*/_jsx(Card,{title:\"Meal Items\",className:\"h-full\",children:/*#__PURE__*/_jsx(MealItems,{items:mealItems,onRemoveFood:removeFoodFromMeal,onUpdatePortion:updateFoodPortion})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{delay:0.2},children:/*#__PURE__*/_jsx(Card,{title:\"Meal Context\",children:/*#__PURE__*/_jsx(MealContext,{context:context,setContext:setContext})})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:0.3},className:\"text-center\",children:/*#__PURE__*/_jsxs(Button,{onClick:saveMeal,disabled:isSaving||mealItems.length===0,variant:\"primary\",className:\"inline-flex items-center px-8 py-4 text-lg font-semibold\",children:[/*#__PURE__*/_jsx(Save,{className:\"h-5 w-5 mr-2\"}),isSaving?'Saving...':'Save Meal']})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{delay:0.4},className:\"text-center text-sm text-text-muted\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"flex items-center justify-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Powered by\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-text-secondary\",children:\"IFCT\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-text-secondary\",children:\"USDA\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-text-secondary\",children:\"OpenFoodFacts\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs opacity-75\",children:\"+ AI analysis\"})]})})]})]});};export default MealBuilder;","map":{"version":3,"names":["React","useState","useCallback","useMemo","motion","Search","Save","useAuth","buildApiUrl","toast","Card","Button","FoodSearch","MealItems","MealContext","jsx","_jsx","jsxs","_jsxs","MealBuilder","_ref","onMealSaved","token","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","hasSearched","setHasSearched","mealItems","setMealItems","context","setContext","lateNightEating","sedentaryAfterMeal","stressEating","packagedStoredLong","mindlessEating","isSaving","setIsSaving","indianPortionUnits","unit","label","grams","description","searchFoods","query","trim","console","log","response","fetch","method","headers","concat","body","JSON","stringify","source","limit","ok","data","json","results","length","foods","map","result","_id","id","name","portionGramsDefault","nutrients","nutriments100g","tags","gi","fodmap","novaClass","aliases","provenance","_result$nutriments","_result$nutriments2","_result$nutriments3","_result$nutriments4","_result$nutriments5","_result$nutriments6","kcal","protein","fat","carbs","fiber","sugar","vitaminC","zinc","selenium","iron","omega3","brand","relevanceScore","_result$nutriments7","_result$nutriments8","_result$nutriments9","_result$nutriments0","_result$nutriments1","_result$nutriments10","barcode","uniqueFoods","reduce","acc","food","existingFood","find","f","toLowerCase","push","fallbackResponse","encodeURIComponent","fallbackData","transformedFoods","_objectSpread","errorData","text","error","status","addFoodToMeal","selectedUnit","arguments","undefined","foodId","existingItem","item","portionToAdd","unitDescription","defaultUnit","prev","message","success","newItem","customName","removeFoodFromMeal","filter","updateFoodPortion","Math","max","saveMeal","mealData","items","loading","dismiss","catch","handleSearchInput","e","target","value","handleSearchSubmit","preventDefault","handleClearSearch","className","children","div","initial","opacity","x","animate","title","onSubmit","type","onChange","placeholder","disabled","onClick","onAddFood","transition","delay","onRemoveFood","onUpdatePortion","y","variant"],"sources":["/Users/priyas/Desktop/untangle-platform/src/components/meal/MealBuilder.jsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Search, Save } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { buildApiUrl } from '../../config';\nimport toast from 'react-hot-toast';\nimport { Card, Button } from '../ui';\nimport FoodSearch from './FoodSearch';\nimport MealItems from './MealItems';\nimport MealContext from './MealContext';\n\nconst MealBuilder = ({ onMealSaved }) => {\n  const { token } = useAuth();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [mealItems, setMealItems] = useState([]);\n  const [context, setContext] = useState({\n    lateNightEating: false,\n    sedentaryAfterMeal: false,\n    stressEating: false,\n    packagedStoredLong: false,\n    mindlessEating: false\n  });\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Indian portion units with their gram equivalents\n  const indianPortionUnits = useMemo(() => [\n    { unit: 'katori', label: 'Katori', grams: 80, description: 'Small bowl' },\n    { unit: 'bowl', label: 'Bowl', grams: 150, description: 'Medium bowl' },\n    { unit: 'piece', label: 'Piece', grams: 50, description: 'Standard piece' },\n    { unit: 'spoon', label: 'Spoon', grams: 15, description: 'Tablespoon' },\n    { unit: 'roti', label: 'Roti', grams: 45, description: 'Flatbread' },\n    { unit: 'idli', label: 'Idli', grams: 120, description: 'Steamed rice cake' },\n    { unit: 'cup', label: 'Cup', grams: 200, description: 'Standard cup' },\n    { unit: 'handful', label: 'Handful', grams: 30, description: 'Handful' }\n  ], []);\n\n  // Search for foods using multi-source search with fallback\n  const searchFoods = useCallback(async (query) => {\n    if (!query.trim() || !token) return;\n    \n    setIsSearching(true);\n    try {\n      // Try multi-source search first (POST endpoint)\n      console.log('🔍 Attempting multi-source search for:', query.trim());\n      const response = await fetch(buildApiUrl('/api/food/search'), {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          source: 'combined', // Search all sources: local, USDA, and OpenFoodFacts\n          limit: 20\n        })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('🔍 Multi-source search response:', data);\n        \n        // The POST endpoint returns 'results' with multi-source data\n        const results = data.results || [];\n        console.log('📊 Raw results:', results);\n        \n        if (results.length > 0) {\n          // Transform results to match expected format\n          const foods = results.map(result => {\n            // Handle different source formats\n            if (result.source === 'IFCT') {\n              // Local database food\n              return {\n                _id: result.id || result._id,\n                name: result.name,\n                source: 'IFCT', // Use consistent source name\n                portionGramsDefault: result.portionGramsDefault || 100,\n                nutrients: result.nutrients || result.nutriments100g,\n                tags: result.tags || [],\n                gi: result.gi,\n                fodmap: result.fodmap,\n                novaClass: result.novaClass,\n                aliases: result.aliases || [],\n                provenance: result.provenance || { source: 'Local Database' }\n              };\n            } else if (result.source === 'usda') {\n              // USDA food\n              return {\n                _id: result.id,\n                name: result.name,\n                source: 'USDA',\n                portionGramsDefault: 100,\n                nutrients: {\n                  kcal: result.nutriments100g?.kcal || 0,\n                  protein: result.nutriments100g?.protein || 0,\n                  fat: result.nutriments100g?.fat || 0,\n                  carbs: result.nutriments100g?.carbs || 0,\n                  fiber: result.nutriments100g?.fiber || 0,\n                  sugar: result.nutriments100g?.sugar || 0,\n                  vitaminC: 0,\n                  zinc: 0,\n                  selenium: 0,\n                  iron: 0,\n                  omega3: 0\n                },\n                tags: [],\n                brand: result.brand,\n                relevanceScore: result.relevanceScore,\n                provenance: result.provenance || { source: 'USDA Database' }\n              };\n            } else if (result.source === 'off') {\n              // OpenFoodFacts food\n              return {\n                _id: result.id,\n                name: result.name,\n                source: 'OpenFoodFacts',\n                portionGramsDefault: 100,\n                nutrients: {\n                  kcal: result.nutriments100g?.kcal || 0,\n                  protein: result.nutriments100g?.protein || 0,\n                  fat: result.nutriments100g?.fat || 0,\n                  carbs: result.nutriments100g?.carbs || 0,\n                  fiber: result.nutriments100g?.fiber || 0,\n                  sugar: result.nutriments100g?.sugar || 0,\n                  vitaminC: 0,\n                  zinc: 0,\n                  selenium: 0,\n                  iron: 0,\n                  omega3: 0\n                },\n                tags: result.tags || [],\n                brand: result.brand,\n                barcode: result.barcode,\n                novaClass: result.novaClass,\n                relevanceScore: result.relevanceScore,\n                provenance: result.provenance || { source: 'Open Food Facts' }\n              };\n            }\n            return result;\n          });\n          \n          // Remove duplicates based on name and source\n          const uniqueFoods = foods.reduce((acc, food) => {\n            const existingFood = acc.find(f => \n              f._id === food._id || \n              (f.name.toLowerCase() === food.name.toLowerCase() && f.source === food.source)\n            );\n            \n            if (!existingFood) {\n              acc.push(food);\n            }\n            return acc;\n          }, []);\n          \n          console.log('✅ Multi-source search successful, found:', uniqueFoods.length, 'foods');\n          setSearchResults(uniqueFoods);\n          return;\n        }\n      }\n      \n      // Fallback to local search if multi-source search fails or returns no results\n      console.log('🔄 Multi-source search failed or no results, falling back to local search');\n      const fallbackResponse = await fetch(buildApiUrl(`/api/food/search?q=${encodeURIComponent(query.trim())}&limit=20`), {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (fallbackResponse.ok) {\n        const fallbackData = await fallbackResponse.json();\n        const foods = fallbackData.foods || [];\n        \n        // Transform fallback foods to ensure consistent source information\n        const transformedFoods = foods.map(food => ({\n          ...food,\n          source: 'IFCT', // Local database foods are from IFCT\n          provenance: food.provenance || { source: 'Local Database' }\n        }));\n        \n        // Remove duplicates based on food ID and name\n        const uniqueFoods = transformedFoods.reduce((acc, food) => {\n          const existingFood = acc.find(f => \n            f._id === food._id || \n            f.name.toLowerCase() === food.name.toLowerCase()\n          );\n          \n          if (!existingFood) {\n            acc.push(food);\n          }\n          return acc;\n        }, []);\n        \n        console.log('✅ Fallback local search successful, found:', uniqueFoods.length, 'foods');\n        setSearchResults(uniqueFoods);\n      } else {\n        const errorData = await fallbackResponse.text();\n        console.error('❌ Both searches failed:', response.status, errorData);\n        toast.error(`Failed to search foods: ${fallbackResponse.status}`);\n      }\n    } catch (error) {\n      console.error('Error searching foods:', error);\n      toast.error('Error searching foods');\n    } finally {\n      setIsSearching(false);\n    }\n  }, [token]);\n\n  // Add food to meal\n  const addFoodToMeal = useCallback((food, selectedUnit = null) => {\n    // Handle different ID formats from different sources\n    const foodId = food._id || food.id || food.barcode;\n    const existingItem = mealItems.find(item => item.foodId === foodId);\n    \n    // Determine the portion to add - default to 1 katori if no unit specified\n    let portionToAdd = 80; // Default to 1 katori (80g)\n    let unitDescription = '1 katori';\n    let defaultUnit = indianPortionUnits[0]; // Default to katori\n    \n    if (selectedUnit) {\n      portionToAdd = selectedUnit.grams;\n      unitDescription = `1 ${selectedUnit.unit}`;\n    } else {\n      // Use default Indian portion unit (1 katori)\n      portionToAdd = defaultUnit.grams;\n      unitDescription = `1 ${defaultUnit.unit}`;\n      selectedUnit = defaultUnit;\n    }\n    \n    if (existingItem) {\n      // Update existing item\n      setMealItems(prev => prev.map(item => \n        item.foodId === foodId \n          ? { ...item, grams: item.grams + portionToAdd }\n          : item\n      ));\n      const message = selectedUnit \n        ? `Updated ${food.name} with +${unitDescription} (${portionToAdd}g)`\n        : `Updated ${food.name} portion`;\n      toast.success(message);\n    } else {\n      // Add new item\n      const newItem = {\n        foodId: foodId,\n        customName: food.name,\n        grams: portionToAdd,\n        food: food, // Store full food object for analysis\n        selectedUnit: selectedUnit // Store the selected unit for display\n      };\n      setMealItems(prev => [...prev, newItem]);\n      const message = selectedUnit \n        ? `Added ${food.name} (${unitDescription} = ${portionToAdd}g)`\n        : `Added ${food.name} to meal`;\n      toast.success(message);\n    }\n    \n    // Clear search\n    setSearchQuery('');\n    setSearchResults([]);\n    setHasSearched(false);\n  }, [mealItems, indianPortionUnits]);\n\n  // Remove food from meal\n  const removeFoodFromMeal = useCallback((foodId) => {\n    setMealItems(prev => prev.filter(item => item.foodId !== foodId));\n    toast.success('Food removed from meal');\n  }, []);\n\n  // Update food portion\n  const updateFoodPortion = useCallback((foodId, grams) => {\n    setMealItems(prev => prev.map(item => \n      item.foodId === foodId \n        ? { ...item, grams: Math.max(0, grams) }\n        : item\n    ));\n  }, []);\n\n  // Save meal\n  const saveMeal = useCallback(async () => {\n    if (mealItems.length === 0) {\n      toast.error('Please add at least one food item');\n      return;\n    }\n\n    setIsSaving(true);\n    try {\n      const mealData = {\n        items: mealItems.map(item => ({\n          foodId: item.foodId,\n          grams: item.grams\n        })),\n        context\n      };\n\n      console.log('MealBuilder: Sending meal data:', mealData);\n      console.log('MealBuilder: Token exists:', !!token);\n      \n      // Show initial loading message\n      toast.loading('Processing meal data...', { id: 'meal-saving' });\n\n      const response = await fetch(buildApiUrl('/api/meals'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(mealData)\n      });\n\n      if (response.ok) {\n        await response.json();\n        toast.dismiss('meal-saving');\n        toast.success('Meal saved successfully!');\n        \n        // Clear form\n        setMealItems([]);\n        setContext({\n          lateNightEating: false,\n          sedentaryAfterMeal: false,\n          stressEating: false,\n          packagedStoredLong: false,\n          mindlessEating: false\n        });\n\n        // Notify parent component to refresh meal data\n        if (onMealSaved) {\n          console.log('MealBuilder: Meal saved, notifying parent to refresh');\n          onMealSaved();\n        }\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Failed to save meal:', response.status, errorData);\n        toast.dismiss('meal-saving');\n        toast.error(`Failed to save meal: ${errorData.message || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error saving meal:', error);\n      toast.dismiss('meal-saving');\n      toast.error(`Error saving meal: ${error.message}`);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [mealItems, context, token, onMealSaved]);\n\n  // Handle search input - only update state, don't search\n  const handleSearchInput = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    \n    // Clear results and reset search state when input is empty\n    if (!query.trim()) {\n      setSearchResults([]);\n      setHasSearched(false);\n    }\n  };\n\n  // Handle search submit\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      setHasSearched(true);\n      searchFoods(searchQuery);\n    }\n  };\n\n  // Clear search\n  const handleClearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setHasSearched(false);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Left Column - Food Search */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n        >\n          <Card\n            title=\"Search & Add Foods\"\n            className=\"h-full\"\n          >\n              \n              <form onSubmit={handleSearchSubmit} className=\"mb-4\">\n                <div className=\"flex gap-2\">\n                  <div className=\"relative flex-1\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-text-secondary h-5 w-5\" />\n                    <input\n                      type=\"text\"\n                      value={searchQuery}\n                      onChange={handleSearchInput}\n                      placeholder=\"Search foods...\"\n                      className=\"w-full pl-10 pr-4 py-3 bg-background-primary border border-border-primary rounded-xl text-text-primary focus:border-accent focus:outline-none placeholder-text-muted\"\n                    />\n                  </div>\n                  <button\n                    type=\"submit\"\n                    disabled={!searchQuery.trim()}\n                    className=\"px-6 py-3 bg-accent text-white rounded-xl hover:bg-accent/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 font-jakarta text-sm leading-relaxed tracking-wider font-semibold\"\n                  >\n                    Search\n                  </button>\n                  {searchQuery && (\n                    <button\n                      type=\"button\"\n                      onClick={handleClearSearch}\n                      className=\"px-4 py-3 bg-background-tertiary text-text-secondary rounded-xl hover:bg-background-tertiary/80 transition-colors duration-200 font-jakarta text-sm leading-relaxed tracking-wider\"\n                    >\n                      Clear\n                    </button>\n                  )}\n                </div>\n              </form>\n\n              {/* Search Results */}\n            <FoodSearch\n              results={searchResults}\n              isSearching={isSearching}\n              hasSearched={hasSearched}\n              onAddFood={addFoodToMeal}\n              searchQuery={searchQuery}\n            />\n          </Card>\n        </motion.div>\n\n        {/* Right Column - Meal Items */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <Card\n            title=\"Meal Items\"\n            className=\"h-full\"\n          >\n            <MealItems\n              items={mealItems}\n              onRemoveFood={removeFoodFromMeal}\n              onUpdatePortion={updateFoodPortion}\n            />\n          </Card>\n        </motion.div>\n          </div>\n\n      {/* Full-width sections below */}\n      <div className=\"space-y-6\">\n        {/* Meal Context */}\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <Card\n            title=\"Meal Context\"\n          >\n            <MealContext\n              context={context}\n              setContext={setContext}\n            />\n          </Card>\n        </motion.div>\n\n        {/* Save Button */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n          className=\"text-center\"\n        >\n          <Button\n            onClick={saveMeal}\n            disabled={isSaving || mealItems.length === 0}\n            variant=\"primary\"\n            className=\"inline-flex items-center px-8 py-4 text-lg font-semibold\"\n          >\n            <Save className=\"h-5 w-5 mr-2\" />\n            {isSaving ? 'Saving...' : 'Save Meal'}\n          </Button>\n        </motion.div>\n\n        {/* Data Source Footnote */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.4 }}\n          className=\"text-center text-sm text-text-muted\"\n        >\n          <p className=\"flex items-center justify-center gap-2\">\n            <span>Powered by</span>\n            <span className=\"font-medium text-text-secondary\">IFCT</span>\n            <span>•</span>\n            <span className=\"font-medium text-text-secondary\">USDA</span>\n            <span>•</span>\n            <span className=\"font-medium text-text-secondary\">OpenFoodFacts</span>\n            <span className=\"text-xs opacity-75\">+ AI analysis</span>\n          </p>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default MealBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}