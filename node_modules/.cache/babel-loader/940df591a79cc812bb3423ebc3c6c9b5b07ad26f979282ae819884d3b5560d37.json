{"ast":null,"code":"import _objectSpread from\"/Users/priyas/Desktop/untangle-platform/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Card,Button,Badge}from'../components/ui';import{useAuth}from'../contexts/AuthContext';import{buildApiUrl}from'../config';import{CreateHabitPopup}from'../components/habits';import{CreateGoalPopup,EditGoalPopup}from'../components/goals';import{CreateTaskPopup}from'../components/tasks';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GoalAlignedDay=()=>{const{user,token}=useAuth();const[selectedDate,setSelectedDate]=useState(new Date());const[habits,setHabits]=useState([]);const[goals,setGoals]=useState([]);const[tasks,setTasks]=useState([]);const[showCreateHabitPopup,setShowCreateHabitPopup]=useState(false);const[showCreateGoalPopup,setShowCreateGoalPopup]=useState(false);const[showCreateTaskPopup,setShowCreateTaskPopup]=useState(false);const[showEditGoalPopup,setShowEditGoalPopup]=useState(false);const[selectedGoalForTask,setSelectedGoalForTask]=useState(null);const[selectedGoalForHabit,setSelectedGoalForHabit]=useState(null);const[selectedGoalForEdit,setSelectedGoalForEdit]=useState(null);const[deletingGoal,setDeletingGoal]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[completingHabits,setCompletingHabits]=useState(new Set());const[completedHabits,setCompletedHabits]=useState(new Set());// Utility: check if a date is today (local timezone)\nconst isDateToday=dateLike=>{if(!dateLike)return false;const d=new Date(dateLike);const now=new Date();return d.getFullYear()===now.getFullYear()&&d.getMonth()===now.getMonth()&&d.getDate()===now.getDate();};// Format date components separately\nconst formatDateComponents=date=>{return{day:date.getDate(),dayName:date.toLocaleDateString('en-US',{weekday:'long'}),month:date.toLocaleDateString('en-US',{month:'long'}),year:date.getFullYear()};};// Get day title\nconst getDayTitle=()=>{const dateComponents=formatDateComponents(selectedDate);return\"\".concat(dateComponents.dayName,\", \").concat(dateComponents.month,\" \").concat(dateComponents.day);};// Load user's habits\nconst loadHabits=useCallback(async()=>{try{const response=await fetch(buildApiUrl('/api/habits?all=true'),{headers:{'Authorization':\"Bearer \".concat(token)}});if(response.ok){const data=await response.json();setHabits(Array.isArray(data)?data:data.habits||[]);}else{console.error('❌ Habits response not ok:',response.status);const errorText=await response.text();console.error('❌ Habits error response:',errorText);}}catch(error){console.error('❌ Error loading habits:',error);}},[token]);// Load user's goals\nconst loadGoals=useCallback(async()=>{try{const response=await fetch(buildApiUrl('/api/goals'),{headers:{'Authorization':\"Bearer \".concat(token)}});if(response.ok){const data=await response.json();setGoals(data||[]);}else{console.error('❌ Goals response not ok:',response.status);const errorText=await response.text();console.error('❌ Goals error response:',errorText);}}catch(error){console.error('❌ Error loading goals:',error);}},[token]);// Load user's tasks\nconst loadTasks=useCallback(async()=>{try{const response=await fetch(buildApiUrl('/api/tasks'),{headers:{'Authorization':\"Bearer \".concat(token)}});if(response.ok){const data=await response.json();console.log('✅ Tasks loaded successfully:',data);setTasks(data.tasks||[]);}else{console.error('❌ Tasks response not ok:',response.status);const errorText=await response.text();console.error('❌ Tasks error response:',errorText);}}catch(error){console.error('❌ Error loading tasks:',error);}},[token]);// Handle habit creation\nconst handleHabitCreated=newHabit=>{setHabits(prev=>[newHabit,...prev]);};// Handle goal creation\nconst handleGoalCreated=newGoal=>{setGoals(prev=>[newGoal,...prev]);};// Handle task creation\nconst handleTaskCreated=newTask=>{console.log('✅ Task created successfully:',newTask);setTasks(prev=>[newTask,...prev]);};// Handle goal update\nconst handleGoalUpdated=updatedGoal=>{setGoals(prev=>prev.map(goal=>goal._id===updatedGoal._id?updatedGoal:goal));};// Handle goal deletion\nconst handleDeleteGoal=async goal=>{if(!window.confirm(\"Are you sure you want to delete the goal \\\"\".concat(goal.name,\"\\\"? This action cannot be undone.\"))){return;}setDeletingGoal(goal._id);try{const response=await fetch(buildApiUrl(\"/api/goals/\".concat(goal._id)),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(token)}});if(response.ok){console.log('✅ Goal deleted successfully');setGoals(prev=>prev.filter(g=>g._id!==goal._id));}else{const error=await response.json();console.error('❌ Goal deletion failed:',error);alert(\"Error deleting goal: \".concat(error.message));}}catch(error){console.error('❌ Error deleting goal:',error);alert('Error deleting goal. Please try again.');}finally{setDeletingGoal(null);}};// Handle opening edit goal popup\nconst handleEditGoal=goal=>{setSelectedGoalForEdit(goal);setShowEditGoalPopup(true);};// Handle opening task creation popup for a specific goal\nconst handleAddTaskToGoal=goal=>{console.log('🎯 Opening task creation popup for goal:',goal);setSelectedGoalForTask(goal);setShowCreateTaskPopup(true);};// Handle opening habit creation popup for a specific goal\nconst handleAddHabitToGoal=goal=>{setSelectedGoalForHabit(goal);setShowCreateHabitPopup(true);};// Get tasks for a specific goal (both completed and pending)\nconst getTasksForGoal=goalId=>{// Show only tasks created today\nreturn tasks.filter(task=>task.goalIds&&task.goalIds.includes(goalId)&&isDateToday(task.createdAt));};// Get habits for a specific goal\nconst getHabitsForGoal=goalId=>{const goalHabits=habits.filter(habit=>{const habitGoalId=habit.goalId;let matches=false;// Handle both string and object goalId\nif(typeof habitGoalId==='object'&&habitGoalId!==null){// If goalId is populated object, compare _id\nmatches=habitGoalId._id===goalId||habitGoalId._id===goalId.toString();}else{// If goalId is string, compare directly\nmatches=habitGoalId===goalId||habitGoalId===goalId.toString()||(habitGoalId===null||habitGoalId===void 0?void 0:habitGoalId.toString())===(goalId===null||goalId===void 0?void 0:goalId.toString());}const isActive=habit.isActive!==false;const result=matches&&isActive;// Debug logging\nif(result){console.log(\"\\uD83D\\uDD0D Habit \\\"\".concat(habit.habit,\"\\\" matches goal \").concat(goalId,\":\"),{habitGoalId,goalId,matches,isActive,result});}return result;});console.log(\"\\uD83D\\uDD0D Found \".concat(goalHabits.length,\" habits for goal \").concat(goalId,\":\"),goalHabits.map(h=>h.habit));return goalHabits;};// Get all activities (tasks + habits) for a specific goal\nconst getActivitiesForGoal=goalId=>{const goalTasks=getTasksForGoal(goalId);const goalHabits=getHabitsForGoal(goalId);// Combine tasks and habits into a unified list with stable IDs\nconst activities=[...goalHabits.map(habit=>_objectSpread(_objectSpread({},habit),{},{_id:habit._id||\"habit-\".concat(habit.habit),type:'habit',displayName:habit.habit,duration:habit.valueMin||0,isCompleted:isHabitCompletedToday(habit)})),...goalTasks.map(task=>_objectSpread(_objectSpread({},task),{},{_id:task._id,type:'task',displayName:task.title,duration:task.estimatedDuration||0,isCompleted:task.status==='completed'}))];return activities;};// Check if a habit is completed today (local timezone)\nconst isHabitCompletedToday=habit=>{if(!habit.checkins||!Array.isArray(habit.checkins)){console.log(\"\\uD83D\\uDD0D Habit \\\"\".concat(habit.habit,\"\\\" has no checkins\"));return false;}const today=new Date();today.setHours(0,0,0,0);const isCompleted=habit.checkins.some(checkin=>{const checkinDate=new Date(checkin.date);checkinDate.setHours(0,0,0,0);const matches=checkinDate.getTime()===today.getTime()&&checkin.completed;if(matches){console.log(\"\\uD83D\\uDD0D Habit \\\"\".concat(habit.habit,\"\\\" completed today:\"),{checkinDate:checkinDate.toISOString(),today:today.toISOString(),completed:checkin.completed,duration:checkin.duration});}return matches;});console.log(\"\\uD83D\\uDD0D Habit \\\"\".concat(habit.habit,\"\\\" completion status:\"),{isCompleted,checkinsCount:habit.checkins.length,checkins:habit.checkins.map(c=>({date:c.date,completed:c.completed,duration:c.duration}))});return isCompleted;};// Handle habit completion\nconst handleHabitComplete=async habit=>{// Add habit to completing set\nsetCompletingHabits(prev=>new Set([...prev,habit._id]));try{const response=await fetch(buildApiUrl(\"/api/habits/\".concat(habit._id,\"/checkin\")),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({date:new Date().toISOString(),completed:true,duration:habit.valueMin||0,notes:'',quality:'good'})});if(response.ok){console.log('✅ Habit completed successfully, reloading data...');// Show success state briefly\nsetCompletedHabits(prev=>new Set([...prev,habit._id]));setTimeout(()=>{setCompletedHabits(prev=>{const newSet=new Set(prev);newSet.delete(habit._id);return newSet;});},2000);// Reload data to get updated habit checkins\nawait Promise.all([loadHabits(),loadGoals()]);// Also trigger backend goal progress recalculation\ntry{await fetch(buildApiUrl('/api/goals/today'),{headers:{'Authorization':\"Bearer \".concat(token)}});console.log('✅ Goal progress recalculated on backend');}catch(error){console.warn('⚠️ Failed to recalculate goal progress on backend:',error);}}else{console.error('❌ Failed to complete habit:',response.status);}}catch(error){console.error('❌ Error completing habit:',error);}finally{// Remove habit from completing set\nsetCompletingHabits(prev=>{const newSet=new Set(prev);newSet.delete(habit._id);return newSet;});}};// Handle activity deletion (habits or tasks)\nconst handleDeleteActivity=async activity=>{const activityType=activity.type==='habit'?'habit':'task';const activityName=activity.displayName;if(!window.confirm(\"Are you sure you want to delete this \".concat(activityType,\" \\\"\").concat(activityName,\"\\\"? This action cannot be undone.\"))){return;}try{let response;if(activity.type==='habit'){// Delete habit\nresponse=await fetch(buildApiUrl(\"/api/habits/\".concat(activity._id)),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(token)}});}else{// Delete task\nresponse=await fetch(buildApiUrl(\"/api/tasks/\".concat(activity._id)),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(token)}});}if(response.ok){console.log(\"\\u2705 \".concat(activityType,\" deleted successfully\"));// Reload data to reflect the deletion\nawait Promise.all([loadHabits(),loadGoals(),loadTasks()]);// Trigger backend goal progress recalculation\ntry{await fetch(buildApiUrl('/api/goals/today'),{headers:{'Authorization':\"Bearer \".concat(token)}});console.log('✅ Goal progress recalculated after deletion');}catch(error){console.warn('⚠️ Failed to recalculate goal progress after deletion:',error);}}else{const error=await response.json();console.error(\"\\u274C \".concat(activityType,\" deletion failed:\"),error);alert(\"Error deleting \".concat(activityType,\": \").concat(error.message));}}catch(error){console.error(\"\\u274C Error deleting \".concat(activityType,\":\"),error);alert(\"Error deleting \".concat(activityType,\". Please try again.\"));}};// Helper: does a habit occur today based on frequency and date range\nconst doesHabitOccurToday=habit=>{if(!habit||habit.isActive===false)return false;const today=new Date();const start=new Date(habit.startDate||today);const end=new Date(habit.endDate||today);// Normalize\ntoday.setHours(0,0,0,0);start.setHours(0,0,0,0);end.setHours(23,59,59,999);if(today<start||today>end)return false;const freq=habit.frequency||'daily';if(freq==='daily')return true;if(freq==='weekly'){return today.getDay()===new Date(habit.startDate||today).getDay();}if(freq==='monthly'){return today.getDate()===new Date(habit.startDate||today).getDate();}return false;};// Helper: get today's check-in for a habit\nconst getTodayHabitCheckin=habit=>{if(!habit||!Array.isArray(habit.checkins))return null;const today=new Date();today.setHours(0,0,0,0);return habit.checkins.find(c=>{const d=new Date(c.date);d.setHours(0,0,0,0);return d.getTime()===today.getTime();});};// Build a pseudo-task from a completed habit check-in\nconst mapHabitToPseudoTask=(habit,checkin)=>{const durationMin=checkin&&checkin.duration||habit.valueMin||0;const completedAt=checkin&&checkin.date||new Date().toISOString();return{_id:\"habit-\".concat(habit._id),title:habit.habit,estimatedDuration:durationMin,completedAt:typeof completedAt==='string'?completedAt:new Date(completedAt).toISOString(),goalIds:habit.goalId?[habit.goalId]:[],isHabit:true};};// Get today's tasks for a specific goal, merging completed habits for today\nconst getTodayTasksForGoal=goalId=>{const today=new Date();const todayStr=today.toISOString().split('T')[0];// YYYY-MM-DD\n// Completed normal tasks today\nconst completedTasksToday=tasks.filter(task=>task.goalIds&&task.goalIds.includes(goalId)&&task.completedAt&&task.completedAt.split('T')[0]===todayStr);// Completed habits today (as pseudo tasks)\nconst completedHabitsToday=(habits||[]).filter(h=>{var _h$goalId;return h.goalId&&(h.goalId===goalId||((_h$goalId=h.goalId)===null||_h$goalId===void 0?void 0:_h$goalId._id)&&h.goalId._id===goalId);}).filter(h=>doesHabitOccurToday(h)).map(h=>({habit:h,checkin:getTodayHabitCheckin(h)})).filter(_ref=>{let{checkin}=_ref;return checkin&&checkin.completed;}).map(_ref2=>{let{habit,checkin}=_ref2;return mapHabitToPseudoTask(habit,checkin);});return[...completedTasksToday,...completedHabitsToday];};// Get tasks for a specific goal completed on the selected date\nconst getTasksForGoalOnDate=goalId=>{const selectedDateStr=selectedDate.toISOString().split('T')[0];return tasks.filter(task=>task.goalIds&&task.goalIds.includes(goalId)&&task.completedAt&&task.completedAt.split('T')[0]===selectedDateStr);};// Get total hours logged for a goal (all time)\nconst getTotalHoursForGoal=goalId=>{const goalTasks=getTasksForGoal(goalId);return goalTasks.reduce((total,task)=>{const duration=task.estimatedDuration||0;return total+duration/60;// Convert minutes to hours\n},0);};// Get today's hours logged for a goal (tasks + completed habits)\nconst getTodayHoursForGoal=goalId=>{const todayTasks=getTodayTasksForGoal(goalId);const taskHours=todayTasks.reduce((total,task)=>{const duration=task.estimatedDuration||0;return total+duration/60;},0);// Add completed habits for this goal\nconst goalHabits=getHabitsForGoal(goalId);const habitHours=goalHabits.reduce((total,habit)=>{if(isHabitCompletedToday(habit)){var _habit$checkins;// Get the actual duration from today's check-in\nconst today=new Date();today.setHours(0,0,0,0);const todayCheckin=(_habit$checkins=habit.checkins)===null||_habit$checkins===void 0?void 0:_habit$checkins.find(checkin=>{const checkinDate=new Date(checkin.date);checkinDate.setHours(0,0,0,0);return checkinDate.getTime()===today.getTime()&&checkin.completed;});const duration=(todayCheckin===null||todayCheckin===void 0?void 0:todayCheckin.duration)||habit.valueMin||0;return total+duration/60;// Convert minutes to hours\n}return total;},0);const totalHours=taskHours+habitHours;// Debug logging\nconsole.log(\"\\uD83D\\uDD0D Goal \".concat(goalId,\" hours calculation:\"),{goalId,taskHours,habitHours,totalHours,goalHabits:goalHabits.map(h=>{var _h$checkins;const today=new Date();today.setHours(0,0,0,0);const todayCheckin=(_h$checkins=h.checkins)===null||_h$checkins===void 0?void 0:_h$checkins.find(checkin=>{const checkinDate=new Date(checkin.date);checkinDate.setHours(0,0,0,0);return checkinDate.getTime()===today.getTime()&&checkin.completed;});return{habit:h.habit,valueMin:h.valueMin,isCompleted:isHabitCompletedToday(h),actualDuration:(todayCheckin===null||todayCheckin===void 0?void 0:todayCheckin.duration)||h.valueMin,checkins:h.checkins};}),todayTasks:todayTasks.map(t=>({title:t.title,estimatedDuration:t.estimatedDuration,status:t.status}))});return totalHours;};// Get hours logged for a goal on the selected date\nconst getHoursForGoalOnDate=goalId=>{const goalTasks=getTasksForGoalOnDate(goalId);const taskHours=goalTasks.reduce((total,task)=>{const duration=task.estimatedDuration||0;return total+duration/60;// Convert minutes to hours\n},0);// Add completed habits for this goal on the selected date\nconst goalHabits=getHabitsForGoal(goalId);const selectedDateStr=selectedDate.toISOString().split('T')[0];// YYYY-MM-DD format\nconst habitHours=goalHabits.reduce((total,habit)=>{if(habit.checkins&&Array.isArray(habit.checkins)){const checkinForDate=habit.checkins.find(checkin=>{const checkinDate=new Date(checkin.date);const checkinStr=checkinDate.toISOString().split('T')[0];// YYYY-MM-DD format\nreturn checkinStr===selectedDateStr&&checkin.completed;});if(checkinForDate){const duration=habit.valueMin||0;return total+duration/60;// Convert minutes to hours\n}}return total;},0);return taskHours+habitHours;};// Get month progress for a goal (hours logged this month)\nconst getMonthHoursForGoal=goalId=>{const now=new Date();const startOfMonth=new Date(now.getFullYear(),now.getMonth(),1);const endOfMonth=new Date(now.getFullYear(),now.getMonth()+1,0);// Get all tasks for this goal completed this month\nconst monthTasks=tasks.filter(task=>{if(!task.goalIds||!task.goalIds.includes(goalId)||!task.completedAt)return false;const completedDate=new Date(task.completedAt);return completedDate>=startOfMonth&&completedDate<=endOfMonth;});const taskHours=monthTasks.reduce((total,task)=>{const duration=task.estimatedDuration||0;return total+duration/60;// Convert minutes to hours\n},0);// Get all habits for this goal completed this month\nconst goalHabits=getHabitsForGoal(goalId);const habitHours=goalHabits.reduce((total,habit)=>{if(habit.checkins&&Array.isArray(habit.checkins)){const monthCheckins=habit.checkins.filter(checkin=>{const checkinDate=new Date(checkin.date);return checkinDate>=startOfMonth&&checkinDate<=endOfMonth&&checkin.completed;});const habitMonthHours=monthCheckins.reduce((sum,checkin)=>{const duration=checkin.duration||habit.valueMin||0;return sum+duration/60;// Convert minutes to hours\n},0);return total+habitMonthHours;}return total;},0);const totalMonthHours=taskHours+habitHours;// Debug logging for monthly calculation\nconsole.log(\"\\uD83D\\uDD0D Monthly calculation for goal \".concat(goalId,\":\"),{startOfMonth:startOfMonth.toISOString(),endOfMonth:endOfMonth.toISOString(),monthTasks:monthTasks.length,taskHours,goalHabits:goalHabits.length,habitHours,totalMonthHours});return totalMonthHours;};// Get number of activities completed this month for a goal\nconst getMonthActivitiesCountForGoal=goalId=>{const now=new Date();const startOfMonth=new Date(now.getFullYear(),now.getMonth(),1);const endOfMonth=new Date(now.getFullYear(),now.getMonth()+1,0);// Count completed tasks this month\nconst monthTasks=tasks.filter(task=>{if(!task.goalIds||!task.goalIds.includes(goalId)||!task.completedAt)return false;const completedDate=new Date(task.completedAt);return completedDate>=startOfMonth&&completedDate<=endOfMonth;}).length;// Count completed habits this month\nconst goalHabits=getHabitsForGoal(goalId);const monthHabits=goalHabits.reduce((count,habit)=>{if(habit.checkins&&Array.isArray(habit.checkins)){const monthCheckins=habit.checkins.filter(checkin=>{const checkinDate=new Date(checkin.date);return checkinDate>=startOfMonth&&checkinDate<=endOfMonth&&checkin.completed;});return count+monthCheckins.length;}return count;},0);return monthTasks+monthHabits;};// Handle date selection\nconst handleDateSelect=date=>{setSelectedDate(date);};// Load data on component mount\nuseEffect(()=>{if(user&&token){setLoading(true);setError(null);const loadAllData=async()=>{try{await Promise.all([loadHabits(),loadGoals(),loadTasks()]);}catch(err){console.error('Error loading data:',err);setError('Failed to load data. Please try again.');}finally{setLoading(false);}};loadAllData();}},[user,token]);// Debug summary when tasks and goals are loaded\nuseEffect(()=>{if(tasks.length>0&&goals.length>0){const totalTasks=tasks.length;const tasksWithGoals=tasks.filter(t=>t.goalIds&&t.goalIds.length>0).length;const totalHours=tasks.reduce((sum,t)=>sum+(t.actualDuration||t.estimatedDuration||0)/60,0);}},[tasks,goals]);const dateComponents=formatDateComponents(selectedDate);// Show loading state\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 lg:col-span-3 xl:col-span-4\",children:/*#__PURE__*/_jsx(Card,{className:\"h-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-[200px]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#1E49C9] mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-[#94A3B8]\",children:\"Loading your goals and activities...\"})]})})})})})});}// Show error state\nif(error){return/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 lg:col-span-3 xl:col-span-4\",children:/*#__PURE__*/_jsx(Card,{className:\"h-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-[200px]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-[#FF6B6B] text-6xl mb-4\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-[#FF6B6B] text-lg mb-4\",children:error}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>window.location.reload(),children:\"Try Again\"})]})})})})})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 auto-rows-[minmax(200px,auto)] [&>*:nth-child(odd)]:animate-fade-in [&>*:nth-child(even)]:animate-fade-in-delayed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 lg:col-span-3 xl:col-span-4\",children:/*#__PURE__*/_jsx(Card,{className:\"h-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-[#E8EEF2] font-oswald tracking-tight\",children:\"Goal-Aligned Day\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-[#94A3B8] mt-2 text-lg\",children:\"Focus on your goals and daily activities\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-3\",children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowCreateGoalPopup(true),className:\"px-6 py-2\",children:\"Add Goal\"})})]})})}),goals.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 lg:col-span-3 xl:col-span-4\",children:/*#__PURE__*/_jsx(Card,{className:\"h-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-[#E8EEF2] mb-2\",children:\"No goals found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-[#94A3B8] mb-6\",children:\"Create some goals to get started with your goal-aligned day!\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowCreateGoalPopup(true),className:\"px-6 py-2\",children:\"Create Your First Goal\"})]})})}):goals.map((goal,index)=>{const goalTasks=getTodayTasksForGoal(goal._id);const goalActivities=getActivitiesForGoal(goal._id);const todayHours=getTodayHoursForGoal(goal._id);const monthHours=getMonthHoursForGoal(goal._id);const monthActivitiesCount=getMonthActivitiesCountForGoal(goal._id);// Debug logging for each goal\nconsole.log(\"\\uD83D\\uDD0D Goal \".concat(goal.title,\" (\").concat(goal._id,\"):\"),{todayHours,targetHours:goal.targetHours,goalActivities:goalActivities.length,goalTasks:goalTasks.length});return/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 lg:col-span-3 xl:col-span-4\",children:/*#__PURE__*/_jsxs(Card,{className:\"h-full min-h-[500px] group relative hover:border-[rgba(255,255,255,0.3)] hover:shadow-lg hover:shadow-[#1E49C9]/20 transition-all duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-xl font-bold text-[#E8EEF2] truncate\",children:goal.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Badge,{variant:goal.isActive?\"default\":\"secondary\",className:\"text-xs px-3 py-1 flex-shrink-0\",children:goal.isActive?\"Active\":\"Inactive\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditGoal(goal),className:\"p-1.5 text-[#94A3B8] hover:text-[#1E49C9] hover:bg-[#1E49C9]/10 rounded-md transition-colors\",title:\"Edit goal\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"})})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteGoal(goal),disabled:deletingGoal===goal._id,className:\"p-1.5 text-[#94A3B8] hover:text-[#FF6B6B] hover:bg-[#FF6B6B]/10 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",title:\"Delete goal\",children:deletingGoal===goal._id?/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b border-[#FF6B6B]\"}):/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"})})})]})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-[#94A3B8] leading-relaxed line-clamp-2\",children:goal.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-[#E8EEF2]\",children:\"Today's Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-[#1E49C9]\",children:[Math.round(todayHours*10)/10,\"h / \",goal.targetHours||0,\"h\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-[#94A3B8]\",children:[Math.round(todayHours*60),\"m / \",Math.round((goal.targetHours||0)*60),\"m\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full bg-[#2A313A] rounded-full h-3 mb-3 relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-[#1E49C9] to-[#3EA6FF] h-3 rounded-full transition-all duration-500\",style:{width:\"\".concat(Math.min(todayHours/(goal.targetHours||1)*100,100),\"%\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs font-medium text-white/80\",children:[Math.round(todayHours/(goal.targetHours||1)*100),\"%\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm text-[#94A3B8]\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"0m\"}),/*#__PURE__*/_jsxs(\"span\",{children:[Math.round((goal.targetHours||0)*60),\"m target\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-[#E8EEF2]\",children:\"This Month\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-[#1E49C9]\",children:[Math.round(monthHours*10)/10,\"h\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-[#94A3B8]\",children:[Math.round(monthHours*60),\"m\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-[#94A3B8]\",children:\"Hours logged this month\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-[#E8EEF2]\",children:\"Activities Done\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-bold text-[#1E49C9]\",children:monthActivitiesCount})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-[#94A3B8]\",children:\"Completed this month\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between mb-3\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-[#E8EEF2]\",children:[\"All Activities (\",goalActivities.length,\")\"]})}),goalActivities.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-64 overflow-y-auto\",children:goalActivities.map((activity,activityIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-[#11151A]/50 rounded-lg border border-[rgba(255,255,255,0.1)] hover:border-[rgba(255,255,255,0.2)] transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium text-[#1E49C9] bg-[#1E49C9]/10 px-2 py-1 rounded\",children:activity.type==='habit'?'Habit':'Task'}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-[#94A3B8]\",children:[activity.duration,\"m\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-[#E8EEF2] truncate\",children:activity.displayName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 flex-shrink-0 flex items-center gap-2\",children:[activity.type==='habit'?activity.isCompleted||completedHabits.has(activity._id)?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1 text-xs text-[#1E49C9] font-medium\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-[#1E49C9]\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Done\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleHabitComplete(activity),disabled:completingHabits.has(activity._id),className:\"text-xs px-3 py-1 bg-[#1E49C9]/10 border border-[#1E49C9]/30 text-[#1E49C9] rounded-md hover:bg-[#1E49C9]/20 hover:border-[#1E49C9]/50 transition-all duration-200 font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1\",children:completingHabits.has(activity._id)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-3 w-3 border-b border-[#1E49C9]\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Marking...\"})]}):'Mark'}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1 text-xs text-[#94A3B8]\",children:[/*#__PURE__*/_jsx(\"span\",{children:activity.isCompleted?'✓':'⏳'}),/*#__PURE__*/_jsx(\"span\",{children:activity.isCompleted?'Done':'Pending'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteActivity(activity),className:\"text-xs px-2 py-1 text-[#FF6B6B] hover:bg-[#FF6B6B]/10 rounded-md transition-colors\",title:\"Delete \".concat(activity.type),children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-3 h-3\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"})})})]})]},\"\".concat(activity.type||'activity',\"-\").concat(activity._id||activityIndex)))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-[#94A3B8]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No activities yet\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-auto pt-4 border-t border-[rgba(255,255,255,0.1)]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>handleAddTaskToGoal(goal),className:\"text-xs px-3 py-1 flex-1 border-[#1E49C9]/30 text-[#1E49C9] hover:bg-[#1E49C9]/10\",children:\"+ Add Task\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>handleAddHabitToGoal(goal),className:\"text-xs px-3 py-1 flex-1 border-[#1E49C9]/30 text-[#1E49C9] hover:bg-[#1E49C9]/10\",children:\"+ Add Habit\"})]})})]})},goal._id||index);})]}),/*#__PURE__*/_jsx(CreateHabitPopup,{isOpen:showCreateHabitPopup,onClose:()=>{setShowCreateHabitPopup(false);setSelectedGoalForHabit(null);},onHabitCreated:handleHabitCreated,goals:goals,selectedGoal:selectedGoalForHabit}),/*#__PURE__*/_jsx(CreateGoalPopup,{isOpen:showCreateGoalPopup,onClose:()=>setShowCreateGoalPopup(false),onGoalCreated:handleGoalCreated}),/*#__PURE__*/_jsx(CreateTaskPopup,{isOpen:showCreateTaskPopup,onClose:()=>{setShowCreateTaskPopup(false);setSelectedGoalForTask(null);},onTaskCreated:handleTaskCreated,goalId:selectedGoalForTask===null||selectedGoalForTask===void 0?void 0:selectedGoalForTask._id,goalName:selectedGoalForTask===null||selectedGoalForTask===void 0?void 0:selectedGoalForTask.name}),/*#__PURE__*/_jsx(EditGoalPopup,{isOpen:showEditGoalPopup,onClose:()=>{setShowEditGoalPopup(false);setSelectedGoalForEdit(null);},onGoalUpdated:handleGoalUpdated,goal:selectedGoalForEdit})]});};export default GoalAlignedDay;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Card","Button","Badge","useAuth","buildApiUrl","CreateHabitPopup","CreateGoalPopup","EditGoalPopup","CreateTaskPopup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GoalAlignedDay","user","token","selectedDate","setSelectedDate","Date","habits","setHabits","goals","setGoals","tasks","setTasks","showCreateHabitPopup","setShowCreateHabitPopup","showCreateGoalPopup","setShowCreateGoalPopup","showCreateTaskPopup","setShowCreateTaskPopup","showEditGoalPopup","setShowEditGoalPopup","selectedGoalForTask","setSelectedGoalForTask","selectedGoalForHabit","setSelectedGoalForHabit","selectedGoalForEdit","setSelectedGoalForEdit","deletingGoal","setDeletingGoal","loading","setLoading","error","setError","completingHabits","setCompletingHabits","Set","completedHabits","setCompletedHabits","isDateToday","dateLike","d","now","getFullYear","getMonth","getDate","formatDateComponents","date","day","dayName","toLocaleDateString","weekday","month","year","getDayTitle","dateComponents","concat","loadHabits","response","fetch","headers","ok","data","json","Array","isArray","console","status","errorText","text","loadGoals","loadTasks","log","handleHabitCreated","newHabit","prev","handleGoalCreated","newGoal","handleTaskCreated","newTask","handleGoalUpdated","updatedGoal","map","goal","_id","handleDeleteGoal","window","confirm","name","method","filter","g","alert","message","handleEditGoal","handleAddTaskToGoal","handleAddHabitToGoal","getTasksForGoal","goalId","task","goalIds","includes","createdAt","getHabitsForGoal","goalHabits","habit","habitGoalId","matches","toString","isActive","result","length","h","getActivitiesForGoal","goalTasks","activities","_objectSpread","type","displayName","duration","valueMin","isCompleted","isHabitCompletedToday","title","estimatedDuration","checkins","today","setHours","some","checkin","checkinDate","getTime","completed","toISOString","checkinsCount","c","handleHabitComplete","body","JSON","stringify","notes","quality","setTimeout","newSet","delete","Promise","all","warn","handleDeleteActivity","activity","activityType","activityName","doesHabitOccurToday","start","startDate","end","endDate","freq","frequency","getDay","getTodayHabitCheckin","find","mapHabitToPseudoTask","durationMin","completedAt","isHabit","getTodayTasksForGoal","todayStr","split","completedTasksToday","completedHabitsToday","_h$goalId","_ref","_ref2","getTasksForGoalOnDate","selectedDateStr","getTotalHoursForGoal","reduce","total","getTodayHoursForGoal","todayTasks","taskHours","habitHours","_habit$checkins","todayCheckin","totalHours","_h$checkins","actualDuration","t","getHoursForGoalOnDate","checkinForDate","checkinStr","getMonthHoursForGoal","startOfMonth","endOfMonth","monthTasks","completedDate","monthCheckins","habitMonthHours","sum","totalMonthHours","getMonthActivitiesCountForGoal","monthHabits","count","handleDateSelect","loadAllData","err","totalTasks","tasksWithGoals","className","children","variant","onClick","location","reload","index","goalActivities","todayHours","monthHours","monthActivitiesCount","targetHours","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","disabled","description","Math","round","style","width","min","activityIndex","has","size","isOpen","onClose","onHabitCreated","selectedGoal","onGoalCreated","onTaskCreated","goalName","onGoalUpdated"],"sources":["/Users/priyas/Desktop/untangle-platform/src/pages/GoalAlignedDay.jsx"],"sourcesContent":["\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, Button, Badge } from '../components/ui';\nimport { useAuth } from '../contexts/AuthContext';\nimport { buildApiUrl } from '../config';\nimport { CreateHabitPopup } from '../components/habits';\nimport { CreateGoalPopup, EditGoalPopup } from '../components/goals';\nimport { CreateTaskPopup } from '../components/tasks';\n\nconst GoalAlignedDay = () => {\n  const { user, token } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [habits, setHabits] = useState([]);\n  const [goals, setGoals] = useState([]);\n  \n  const [tasks, setTasks] = useState([]);\n  const [showCreateHabitPopup, setShowCreateHabitPopup] = useState(false);\n  const [showCreateGoalPopup, setShowCreateGoalPopup] = useState(false);\n  const [showCreateTaskPopup, setShowCreateTaskPopup] = useState(false);\n  const [showEditGoalPopup, setShowEditGoalPopup] = useState(false);\n  const [selectedGoalForTask, setSelectedGoalForTask] = useState(null);\n  const [selectedGoalForHabit, setSelectedGoalForHabit] = useState(null);\n  const [selectedGoalForEdit, setSelectedGoalForEdit] = useState(null);\n  const [deletingGoal, setDeletingGoal] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [completingHabits, setCompletingHabits] = useState(new Set());\n  const [completedHabits, setCompletedHabits] = useState(new Set());\n\n  // Utility: check if a date is today (local timezone)\n  const isDateToday = (dateLike) => {\n    if (!dateLike) return false;\n    const d = new Date(dateLike);\n    const now = new Date();\n    return (\n      d.getFullYear() === now.getFullYear() &&\n      d.getMonth() === now.getMonth() &&\n      d.getDate() === now.getDate()\n    );\n  };\n\n  // Format date components separately\n  const formatDateComponents = (date) => {\n    return {\n      day: date.getDate(),\n      dayName: date.toLocaleDateString('en-US', { weekday: 'long' }),\n      month: date.toLocaleDateString('en-US', { month: 'long' }),\n      year: date.getFullYear()\n    };\n  };\n\n  // Get day title\n  const getDayTitle = () => {\n    const dateComponents = formatDateComponents(selectedDate);\n    return `${dateComponents.dayName}, ${dateComponents.month} ${dateComponents.day}`;\n  };\n\n  // Load user's habits\n  const loadHabits = useCallback(async () => {\n    try {\n      const response = await fetch(buildApiUrl('/api/habits?all=true'), {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setHabits(Array.isArray(data) ? data : (data.habits || []));\n      } else {\n        console.error('❌ Habits response not ok:', response.status);\n        const errorText = await response.text();\n        console.error('❌ Habits error response:', errorText);\n      }\n    } catch (error) {\n      console.error('❌ Error loading habits:', error);\n    }\n  }, [token]);\n\n  // Load user's goals\n  const loadGoals = useCallback(async () => {\n    try {\n      const response = await fetch(buildApiUrl('/api/goals'), {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setGoals(data || []);\n      } else {\n        console.error('❌ Goals response not ok:', response.status);\n        const errorText = await response.text();\n        console.error('❌ Goals error response:', errorText);\n      }\n    } catch (error) {\n      console.error('❌ Error loading goals:', error);\n    }\n  }, [token]);\n\n  // Load user's tasks\n  const loadTasks = useCallback(async () => {\n    try {\n      const response = await fetch(buildApiUrl('/api/tasks'), {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Tasks loaded successfully:', data);\n        setTasks(data.tasks || []);\n      } else {\n        console.error('❌ Tasks response not ok:', response.status);\n        const errorText = await response.text();\n        console.error('❌ Tasks error response:', errorText);\n      }\n    } catch (error) {\n      console.error('❌ Error loading tasks:', error);\n    }\n  }, [token]);\n\n\n  // Handle habit creation\n  const handleHabitCreated = (newHabit) => {\n    setHabits(prev => [newHabit, ...prev]);\n  };\n\n  // Handle goal creation\n  const handleGoalCreated = (newGoal) => {\n    setGoals(prev => [newGoal, ...prev]);\n  };\n\n  // Handle task creation\n  const handleTaskCreated = (newTask) => {\n    console.log('✅ Task created successfully:', newTask);\n    setTasks(prev => [newTask, ...prev]);\n  };\n\n  // Handle goal update\n  const handleGoalUpdated = (updatedGoal) => {\n    setGoals(prev => prev.map(goal => \n      goal._id === updatedGoal._id ? updatedGoal : goal\n    ));\n  };\n\n  // Handle goal deletion\n  const handleDeleteGoal = async (goal) => {\n    if (!window.confirm(`Are you sure you want to delete the goal \"${goal.name}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    setDeletingGoal(goal._id);\n    \n    try {\n      const response = await fetch(buildApiUrl(`/api/goals/${goal._id}`), {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        console.log('✅ Goal deleted successfully');\n        setGoals(prev => prev.filter(g => g._id !== goal._id));\n      } else {\n        const error = await response.json();\n        console.error('❌ Goal deletion failed:', error);\n        alert(`Error deleting goal: ${error.message}`);\n      }\n    } catch (error) {\n      console.error('❌ Error deleting goal:', error);\n      alert('Error deleting goal. Please try again.');\n    } finally {\n      setDeletingGoal(null);\n    }\n  };\n\n  // Handle opening edit goal popup\n  const handleEditGoal = (goal) => {\n    setSelectedGoalForEdit(goal);\n    setShowEditGoalPopup(true);\n  };\n\n  // Handle opening task creation popup for a specific goal\n  const handleAddTaskToGoal = (goal) => {\n    console.log('🎯 Opening task creation popup for goal:', goal);\n    setSelectedGoalForTask(goal);\n    setShowCreateTaskPopup(true);\n  };\n\n  // Handle opening habit creation popup for a specific goal\n  const handleAddHabitToGoal = (goal) => {\n    setSelectedGoalForHabit(goal);\n    setShowCreateHabitPopup(true);\n  };\n\n  // Get tasks for a specific goal (both completed and pending)\n  const getTasksForGoal = (goalId) => {\n    // Show only tasks created today\n    return tasks.filter(task => \n      task.goalIds && \n      task.goalIds.includes(goalId) &&\n      isDateToday(task.createdAt)\n    );\n  };\n\n  // Get habits for a specific goal\n  const getHabitsForGoal = (goalId) => {\n    const goalHabits = habits.filter(habit => {\n      const habitGoalId = habit.goalId;\n      let matches = false;\n      \n      // Handle both string and object goalId\n      if (typeof habitGoalId === 'object' && habitGoalId !== null) {\n        // If goalId is populated object, compare _id\n        matches = habitGoalId._id === goalId || habitGoalId._id === goalId.toString();\n      } else {\n        // If goalId is string, compare directly\n        matches = habitGoalId === goalId || habitGoalId === goalId.toString() || habitGoalId?.toString() === goalId?.toString();\n      }\n      \n      const isActive = habit.isActive !== false;\n      const result = matches && isActive;\n      \n      // Debug logging\n      if (result) {\n        console.log(`🔍 Habit \"${habit.habit}\" matches goal ${goalId}:`, {\n          habitGoalId,\n          goalId,\n          matches,\n          isActive,\n          result\n        });\n      }\n      \n      return result;\n    });\n    \n    console.log(`🔍 Found ${goalHabits.length} habits for goal ${goalId}:`, goalHabits.map(h => h.habit));\n    \n    return goalHabits;\n  };\n\n  // Get all activities (tasks + habits) for a specific goal\n  const getActivitiesForGoal = (goalId) => {\n    const goalTasks = getTasksForGoal(goalId);\n    const goalHabits = getHabitsForGoal(goalId);\n    \n    // Combine tasks and habits into a unified list with stable IDs\n    const activities = [\n      ...goalHabits.map(habit => ({\n        ...habit,\n        _id: habit._id || `habit-${habit.habit}`,\n        type: 'habit',\n        displayName: habit.habit,\n        duration: habit.valueMin || 0,\n        isCompleted: isHabitCompletedToday(habit)\n      })),\n      ...goalTasks.map(task => ({\n        ...task,\n        _id: task._id,\n        type: 'task',\n        displayName: task.title,\n        duration: task.estimatedDuration || 0,\n        isCompleted: task.status === 'completed'\n      }))\n    ];\n    \n    return activities;\n  };\n\n  // Check if a habit is completed today (local timezone)\n  const isHabitCompletedToday = (habit) => {\n    if (!habit.checkins || !Array.isArray(habit.checkins)) {\n      console.log(`🔍 Habit \"${habit.habit}\" has no checkins`);\n      return false;\n    }\n    \n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const isCompleted = habit.checkins.some(checkin => {\n      const checkinDate = new Date(checkin.date);\n      checkinDate.setHours(0, 0, 0, 0);\n      const matches = checkinDate.getTime() === today.getTime() && checkin.completed;\n      \n      if (matches) {\n        console.log(`🔍 Habit \"${habit.habit}\" completed today:`, {\n          checkinDate: checkinDate.toISOString(),\n          today: today.toISOString(),\n          completed: checkin.completed,\n          duration: checkin.duration\n        });\n      }\n      \n      return matches;\n    });\n    \n    console.log(`🔍 Habit \"${habit.habit}\" completion status:`, {\n      isCompleted,\n      checkinsCount: habit.checkins.length,\n      checkins: habit.checkins.map(c => ({\n        date: c.date,\n        completed: c.completed,\n        duration: c.duration\n      }))\n    });\n    \n    return isCompleted;\n  };\n\n  // Handle habit completion\n  const handleHabitComplete = async (habit) => {\n    // Add habit to completing set\n    setCompletingHabits(prev => new Set([...prev, habit._id]));\n    \n    try {\n      const response = await fetch(buildApiUrl(`/api/habits/${habit._id}/checkin`), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          date: new Date().toISOString(),\n          completed: true,\n          duration: habit.valueMin || 0,\n          notes: '',\n          quality: 'good'\n        })\n      });\n\n      if (response.ok) {\n        console.log('✅ Habit completed successfully, reloading data...');\n        \n        // Show success state briefly\n        setCompletedHabits(prev => new Set([...prev, habit._id]));\n        setTimeout(() => {\n          setCompletedHabits(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(habit._id);\n            return newSet;\n          });\n        }, 2000);\n        \n        // Reload data to get updated habit checkins\n        await Promise.all([\n          loadHabits(),\n          loadGoals()\n        ]);\n        \n        // Also trigger backend goal progress recalculation\n        try {\n          await fetch(buildApiUrl('/api/goals/today'), {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('✅ Goal progress recalculated on backend');\n        } catch (error) {\n          console.warn('⚠️ Failed to recalculate goal progress on backend:', error);\n        }\n      } else {\n        console.error('❌ Failed to complete habit:', response.status);\n      }\n    } catch (error) {\n      console.error('❌ Error completing habit:', error);\n    } finally {\n      // Remove habit from completing set\n      setCompletingHabits(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(habit._id);\n        return newSet;\n      });\n    }\n  };\n\n  // Handle activity deletion (habits or tasks)\n  const handleDeleteActivity = async (activity) => {\n    const activityType = activity.type === 'habit' ? 'habit' : 'task';\n    const activityName = activity.displayName;\n    \n    if (!window.confirm(`Are you sure you want to delete this ${activityType} \"${activityName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      let response;\n      \n      if (activity.type === 'habit') {\n        // Delete habit\n        response = await fetch(buildApiUrl(`/api/habits/${activity._id}`), {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } else {\n        // Delete task\n        response = await fetch(buildApiUrl(`/api/tasks/${activity._id}`), {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n\n      if (response.ok) {\n        console.log(`✅ ${activityType} deleted successfully`);\n        \n        // Reload data to reflect the deletion\n        await Promise.all([\n          loadHabits(),\n          loadGoals(),\n          loadTasks()\n        ]);\n        \n        // Trigger backend goal progress recalculation\n        try {\n          await fetch(buildApiUrl('/api/goals/today'), {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('✅ Goal progress recalculated after deletion');\n        } catch (error) {\n          console.warn('⚠️ Failed to recalculate goal progress after deletion:', error);\n        }\n      } else {\n        const error = await response.json();\n        console.error(`❌ ${activityType} deletion failed:`, error);\n        alert(`Error deleting ${activityType}: ${error.message}`);\n      }\n    } catch (error) {\n      console.error(`❌ Error deleting ${activityType}:`, error);\n      alert(`Error deleting ${activityType}. Please try again.`);\n    }\n  };\n\n  // Helper: does a habit occur today based on frequency and date range\n  const doesHabitOccurToday = (habit) => {\n    if (!habit || habit.isActive === false) return false;\n    const today = new Date();\n    const start = new Date(habit.startDate || today);\n    const end = new Date(habit.endDate || today);\n    // Normalize\n    today.setHours(0, 0, 0, 0);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(23, 59, 59, 999);\n    if (today < start || today > end) return false;\n\n    const freq = habit.frequency || 'daily';\n    if (freq === 'daily') return true;\n    if (freq === 'weekly') {\n      return today.getDay() === new Date(habit.startDate || today).getDay();\n    }\n    if (freq === 'monthly') {\n      return today.getDate() === new Date(habit.startDate || today).getDate();\n    }\n    return false;\n  };\n\n  // Helper: get today's check-in for a habit\n  const getTodayHabitCheckin = (habit) => {\n    if (!habit || !Array.isArray(habit.checkins)) return null;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return habit.checkins.find((c) => {\n      const d = new Date(c.date);\n      d.setHours(0, 0, 0, 0);\n      return d.getTime() === today.getTime();\n    });\n  };\n\n  // Build a pseudo-task from a completed habit check-in\n  const mapHabitToPseudoTask = (habit, checkin) => {\n    const durationMin = (checkin && checkin.duration) || habit.valueMin || 0;\n    const completedAt = (checkin && checkin.date) || new Date().toISOString();\n    return {\n      _id: `habit-${habit._id}`,\n      title: habit.habit,\n      estimatedDuration: durationMin,\n      completedAt: typeof completedAt === 'string' ? completedAt : new Date(completedAt).toISOString(),\n      goalIds: habit.goalId ? [habit.goalId] : [],\n      isHabit: true,\n    };\n  };\n\n  // Get today's tasks for a specific goal, merging completed habits for today\n  const getTodayTasksForGoal = (goalId) => {\n    const today = new Date();\n    const todayStr = today.toISOString().split('T')[0]; // YYYY-MM-DD\n\n    // Completed normal tasks today\n    const completedTasksToday = tasks.filter((task) =>\n      task.goalIds &&\n      task.goalIds.includes(goalId) &&\n      task.completedAt &&\n      task.completedAt.split('T')[0] === todayStr\n    );\n\n    // Completed habits today (as pseudo tasks)\n    const completedHabitsToday = (habits || [])\n      .filter((h) => h.goalId && (h.goalId === goalId || (h.goalId?._id && h.goalId._id === goalId)))\n      .filter((h) => doesHabitOccurToday(h))\n      .map((h) => ({ habit: h, checkin: getTodayHabitCheckin(h) }))\n      .filter(({ checkin }) => checkin && checkin.completed)\n      .map(({ habit, checkin }) => mapHabitToPseudoTask(habit, checkin));\n\n    return [...completedTasksToday, ...completedHabitsToday];\n  };\n\n  // Get tasks for a specific goal completed on the selected date\n  const getTasksForGoalOnDate = (goalId) => {\n    const selectedDateStr = selectedDate.toISOString().split('T')[0];\n    return tasks.filter(task => \n      task.goalIds && \n      task.goalIds.includes(goalId) && \n      task.completedAt && \n      task.completedAt.split('T')[0] === selectedDateStr\n    );\n  };\n\n  // Get total hours logged for a goal (all time)\n  const getTotalHoursForGoal = (goalId) => {\n    const goalTasks = getTasksForGoal(goalId);\n    return goalTasks.reduce((total, task) => {\n      const duration = task.estimatedDuration || 0;\n      return total + (duration / 60); // Convert minutes to hours\n    }, 0);\n  };\n\n  // Get today's hours logged for a goal (tasks + completed habits)\n  const getTodayHoursForGoal = (goalId) => {\n    const todayTasks = getTodayTasksForGoal(goalId);\n    const taskHours = todayTasks.reduce((total, task) => {\n      const duration = task.estimatedDuration || 0;\n      return total + duration / 60;\n    }, 0);\n\n    // Add completed habits for this goal\n    const goalHabits = getHabitsForGoal(goalId);\n    const habitHours = goalHabits.reduce((total, habit) => {\n      if (isHabitCompletedToday(habit)) {\n        // Get the actual duration from today's check-in\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        const todayCheckin = habit.checkins?.find(checkin => {\n          const checkinDate = new Date(checkin.date);\n          checkinDate.setHours(0, 0, 0, 0);\n          return checkinDate.getTime() === today.getTime() && checkin.completed;\n        });\n        \n        const duration = todayCheckin?.duration || habit.valueMin || 0;\n        return total + duration / 60; // Convert minutes to hours\n      }\n      return total;\n    }, 0);\n\n    const totalHours = taskHours + habitHours;\n    \n    // Debug logging\n    console.log(`🔍 Goal ${goalId} hours calculation:`, {\n      goalId,\n      taskHours,\n      habitHours,\n      totalHours,\n      goalHabits: goalHabits.map(h => {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        const todayCheckin = h.checkins?.find(checkin => {\n          const checkinDate = new Date(checkin.date);\n          checkinDate.setHours(0, 0, 0, 0);\n          return checkinDate.getTime() === today.getTime() && checkin.completed;\n        });\n        return {\n          habit: h.habit,\n          valueMin: h.valueMin,\n          isCompleted: isHabitCompletedToday(h),\n          actualDuration: todayCheckin?.duration || h.valueMin,\n          checkins: h.checkins\n        };\n      }),\n      todayTasks: todayTasks.map(t => ({\n        title: t.title,\n        estimatedDuration: t.estimatedDuration,\n        status: t.status\n      }))\n    });\n    \n    return totalHours;\n  };\n\n  // Get hours logged for a goal on the selected date\n  const getHoursForGoalOnDate = (goalId) => {\n    const goalTasks = getTasksForGoalOnDate(goalId);\n    const taskHours = goalTasks.reduce((total, task) => {\n      const duration = task.estimatedDuration || 0;\n      return total + (duration / 60); // Convert minutes to hours\n    }, 0);\n\n    // Add completed habits for this goal on the selected date\n    const goalHabits = getHabitsForGoal(goalId);\n    const selectedDateStr = selectedDate.toISOString().split('T')[0]; // YYYY-MM-DD format\n    \n    const habitHours = goalHabits.reduce((total, habit) => {\n      if (habit.checkins && Array.isArray(habit.checkins)) {\n        const checkinForDate = habit.checkins.find(checkin => {\n          const checkinDate = new Date(checkin.date);\n          const checkinStr = checkinDate.toISOString().split('T')[0]; // YYYY-MM-DD format\n          return checkinStr === selectedDateStr && checkin.completed;\n        });\n        \n        if (checkinForDate) {\n          const duration = habit.valueMin || 0;\n          return total + duration / 60; // Convert minutes to hours\n        }\n      }\n      return total;\n    }, 0);\n\n    return taskHours + habitHours;\n  };\n\n  // Get month progress for a goal (hours logged this month)\n  const getMonthHoursForGoal = (goalId) => {\n    const now = new Date();\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    \n    // Get all tasks for this goal completed this month\n    const monthTasks = tasks.filter(task => {\n      if (!task.goalIds || !task.goalIds.includes(goalId) || !task.completedAt) return false;\n      const completedDate = new Date(task.completedAt);\n      return completedDate >= startOfMonth && completedDate <= endOfMonth;\n    });\n    \n    const taskHours = monthTasks.reduce((total, task) => {\n      const duration = task.estimatedDuration || 0;\n      return total + (duration / 60); // Convert minutes to hours\n    }, 0);\n\n    // Get all habits for this goal completed this month\n    const goalHabits = getHabitsForGoal(goalId);\n    const habitHours = goalHabits.reduce((total, habit) => {\n      if (habit.checkins && Array.isArray(habit.checkins)) {\n        const monthCheckins = habit.checkins.filter(checkin => {\n          const checkinDate = new Date(checkin.date);\n          return checkinDate >= startOfMonth && checkinDate <= endOfMonth && checkin.completed;\n        });\n        \n        const habitMonthHours = monthCheckins.reduce((sum, checkin) => {\n          const duration = checkin.duration || habit.valueMin || 0;\n          return sum + duration / 60; // Convert minutes to hours\n        }, 0);\n        \n        return total + habitMonthHours;\n      }\n      return total;\n    }, 0);\n\n    const totalMonthHours = taskHours + habitHours;\n    \n    // Debug logging for monthly calculation\n    console.log(`🔍 Monthly calculation for goal ${goalId}:`, {\n      startOfMonth: startOfMonth.toISOString(),\n      endOfMonth: endOfMonth.toISOString(),\n      monthTasks: monthTasks.length,\n      taskHours,\n      goalHabits: goalHabits.length,\n      habitHours,\n      totalMonthHours\n    });\n    \n    return totalMonthHours;\n  };\n\n  // Get number of activities completed this month for a goal\n  const getMonthActivitiesCountForGoal = (goalId) => {\n    const now = new Date();\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    \n    // Count completed tasks this month\n    const monthTasks = tasks.filter(task => {\n      if (!task.goalIds || !task.goalIds.includes(goalId) || !task.completedAt) return false;\n      const completedDate = new Date(task.completedAt);\n      return completedDate >= startOfMonth && completedDate <= endOfMonth;\n    }).length;\n\n    // Count completed habits this month\n    const goalHabits = getHabitsForGoal(goalId);\n    const monthHabits = goalHabits.reduce((count, habit) => {\n      if (habit.checkins && Array.isArray(habit.checkins)) {\n        const monthCheckins = habit.checkins.filter(checkin => {\n          const checkinDate = new Date(checkin.date);\n          return checkinDate >= startOfMonth && checkinDate <= endOfMonth && checkin.completed;\n        });\n        return count + monthCheckins.length;\n      }\n      return count;\n    }, 0);\n\n    return monthTasks + monthHabits;\n  };\n\n\n  // Handle date selection\n  const handleDateSelect = (date) => {\n    setSelectedDate(date);\n  };\n\n\n  // Load data on component mount\n  useEffect(() => {\n    if (user && token) {\n      setLoading(true);\n      setError(null);\n      \n      const loadAllData = async () => {\n        try {\n          await Promise.all([\n            loadHabits(),\n            loadGoals(),\n            loadTasks()\n          ]);\n        } catch (err) {\n          console.error('Error loading data:', err);\n          setError('Failed to load data. Please try again.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      \n      loadAllData();\n    }\n  }, [user, token]);\n\n  // Debug summary when tasks and goals are loaded\n  useEffect(() => {\n    if (tasks.length > 0 && goals.length > 0) {\n      const totalTasks = tasks.length;\n      const tasksWithGoals = tasks.filter(t => t.goalIds && t.goalIds.length > 0).length;\n      const totalHours = tasks.reduce((sum, t) => sum + ((t.actualDuration || t.estimatedDuration || 0) / 60), 0);\n    }\n  }, [tasks, goals]);\n\n\n\n  const dateComponents = formatDateComponents(selectedDate);\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          <div className=\"md:col-span-2 lg:col-span-3 xl:col-span-4\">\n            <Card className=\"h-full\">\n              <div className=\"flex items-center justify-center min-h-[200px]\">\n                <div className=\"text-center\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#1E49C9] mx-auto mb-4\"></div>\n                  <p className=\"text-[#94A3B8]\">Loading your goals and activities...</p>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          <div className=\"md:col-span-2 lg:col-span-3 xl:col-span-4\">\n            <Card className=\"h-full\">\n              <div className=\"flex items-center justify-center min-h-[200px]\">\n                <div className=\"text-center\">\n                  <div className=\"text-[#FF6B6B] text-6xl mb-4\">⚠️</div>\n                  <p className=\"text-[#FF6B6B] text-lg mb-4\">{error}</p>\n                  <Button \n                    variant=\"primary\" \n                    onClick={() => window.location.reload()}\n                  >\n                    Try Again\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Bento Grid Layout - Pinterest Style */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 auto-rows-[minmax(200px,auto)] [&>*:nth-child(odd)]:animate-fade-in [&>*:nth-child(even)]:animate-fade-in-delayed\">\n        \n        {/* Header Card - Full width */}\n        <div className=\"md:col-span-2 lg:col-span-3 xl:col-span-4\">\n          <Card className=\"h-full\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-[#E8EEF2] font-oswald tracking-tight\">\n                  Goal-Aligned Day\n                </h1>\n                <p className=\"text-[#94A3B8] mt-2 text-lg\">\n                  Focus on your goals and daily activities\n                </p>\n              </div>\n              <div className=\"flex gap-3\">\n                <Button \n                  variant=\"secondary\" \n                  onClick={() => setShowCreateGoalPopup(true)}\n                  className=\"px-6 py-2\"\n                >\n                  Add Goal\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Goals Cards */}\n        {goals.length === 0 ? (\n          <div className=\"md:col-span-2 lg:col-span-3 xl:col-span-4\">\n            <Card className=\"h-full\">\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">🎯</div>\n                <h3 className=\"text-xl font-semibold text-[#E8EEF2] mb-2\">\n                  No goals found\n                </h3>\n                <p className=\"text-[#94A3B8] mb-6\">\n                  Create some goals to get started with your goal-aligned day!\n                </p>\n                <Button \n                  variant=\"secondary\" \n                  onClick={() => setShowCreateGoalPopup(true)}\n                  className=\"px-6 py-2\"\n                >\n                  Create Your First Goal\n                </Button>\n              </div>\n            </Card>\n          </div>\n        ) : (\n          goals.map((goal, index) => {\n            const goalTasks = getTodayTasksForGoal(goal._id);\n            const goalActivities = getActivitiesForGoal(goal._id);\n            const todayHours = getTodayHoursForGoal(goal._id);\n            const monthHours = getMonthHoursForGoal(goal._id);\n            const monthActivitiesCount = getMonthActivitiesCountForGoal(goal._id);\n            \n            // Debug logging for each goal\n            console.log(`🔍 Goal ${goal.title} (${goal._id}):`, {\n              todayHours,\n              targetHours: goal.targetHours,\n              goalActivities: goalActivities.length,\n              goalTasks: goalTasks.length\n            });\n            \n            return (\n              <div key={goal._id || index} className=\"md:col-span-2 lg:col-span-3 xl:col-span-4\">\n                <Card className=\"h-full min-h-[500px] group relative hover:border-[rgba(255,255,255,0.3)] hover:shadow-lg hover:shadow-[#1E49C9]/20 transition-all duration-300\">\n                  \n                  {/* Header */}\n                  <div className=\"mb-6\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"text-xl font-bold text-[#E8EEF2] truncate\">\n                        {goal.name}\n                      </h4>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant={goal.isActive ? \"default\" : \"secondary\"} className=\"text-xs px-3 py-1 flex-shrink-0\">\n                          {goal.isActive ? \"Active\" : \"Inactive\"}\n                        </Badge>\n                        <div className=\"flex gap-1\">\n                          <button\n                            onClick={() => handleEditGoal(goal)}\n                            className=\"p-1.5 text-[#94A3B8] hover:text-[#1E49C9] hover:bg-[#1E49C9]/10 rounded-md transition-colors\"\n                            title=\"Edit goal\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => handleDeleteGoal(goal)}\n                            disabled={deletingGoal === goal._id}\n                            className=\"p-1.5 text-[#94A3B8] hover:text-[#FF6B6B] hover:bg-[#FF6B6B]/10 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                            title=\"Delete goal\"\n                          >\n                            {deletingGoal === goal._id ? (\n                              <div className=\"animate-spin rounded-full h-4 w-4 border-b border-[#FF6B6B]\"></div>\n                            ) : (\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                            )}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-[#94A3B8] leading-relaxed line-clamp-2\">\n                      {goal.description}\n                    </p>\n                  </div>\n\n                  {/* Split Layout: Left (KPIs) and Right (Activities) */}\n                  <div className=\"flex gap-6 mb-6\">\n                    {/* Left Side - KPIs */}\n                    <div className=\"flex-1 space-y-4\">\n                      {/* Day Progress */}\n                      <div className=\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <span className=\"text-sm font-medium text-[#E8EEF2]\">Today's Progress</span>\n                          <div className=\"text-right\">\n                            <div className=\"text-lg font-bold text-[#1E49C9]\">\n                              {Math.round(todayHours * 10) / 10}h / {goal.targetHours || 0}h\n                            </div>\n                            <div className=\"text-xs text-[#94A3B8]\">\n                              {Math.round(todayHours * 60)}m / {Math.round((goal.targetHours || 0) * 60)}m\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Progress Bar */}\n                        <div className=\"w-full bg-[#2A313A] rounded-full h-3 mb-3 relative\">\n                          <div \n                            className=\"bg-gradient-to-r from-[#1E49C9] to-[#3EA6FF] h-3 rounded-full transition-all duration-500\"\n                            style={{ \n                              width: `${Math.min((todayHours / (goal.targetHours || 1)) * 100, 100)}%` \n                            }}\n                          />\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\n                            <span className=\"text-xs font-medium text-white/80\">\n                              {Math.round((todayHours / (goal.targetHours || 1)) * 100)}%\n                            </span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex justify-between text-sm text-[#94A3B8]\">\n                          <span>0m</span>\n                          <span>{Math.round((goal.targetHours || 0) * 60)}m target</span>\n                        </div>\n                      </div>\n\n                      {/* Month Progress */}\n                      <div className=\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-[#E8EEF2]\">This Month</span>\n                          <div className=\"text-right\">\n                            <div className=\"text-lg font-bold text-[#1E49C9]\">\n                              {Math.round(monthHours * 10) / 10}h\n                            </div>\n                            <div className=\"text-xs text-[#94A3B8]\">\n                              {Math.round(monthHours * 60)}m\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"text-xs text-[#94A3B8]\">\n                          Hours logged this month\n                        </div>\n                      </div>\n\n                      {/* Activities Count */}\n                      <div className=\"bg-[#11151A]/50 rounded-lg p-4 border border-[rgba(255,255,255,0.1)]\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-[#E8EEF2]\">Activities Done</span>\n                          <span className=\"text-lg font-bold text-[#1E49C9]\">\n                            {monthActivitiesCount}\n                          </span>\n                        </div>\n                        <div className=\"text-xs text-[#94A3B8]\">\n                          Completed this month\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Right Side - Activities */}\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <span className=\"text-sm font-medium text-[#E8EEF2]\">\n                          All Activities ({goalActivities.length})\n                        </span>\n                      </div>\n                      \n                      {goalActivities.length > 0 ? (\n                        <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                          {goalActivities.map((activity, activityIndex) => (\n                            <div key={`${activity.type || 'activity'}-${activity._id || activityIndex}`} className=\"flex items-center justify-between p-3 bg-[#11151A]/50 rounded-lg border border-[rgba(255,255,255,0.1)] hover:border-[rgba(255,255,255,0.2)] transition-colors\">\n                              {/* Activity Info */}\n                              <div className=\"flex-1 min-w-0\">\n                                <div className=\"flex items-center gap-2 mb-1\">\n                                  <span className=\"text-xs font-medium text-[#1E49C9] bg-[#1E49C9]/10 px-2 py-1 rounded\">\n                                    {activity.type === 'habit' ? 'Habit' : 'Task'}\n                                  </span>\n                                  <span className=\"text-xs text-[#94A3B8]\">\n                                    {activity.duration}m\n                                  </span>\n                                </div>\n                                <div className=\"text-sm text-[#E8EEF2] truncate\">\n                                  {activity.displayName}\n                                </div>\n                              </div>\n                              \n                              {/* Action Button/Status */}\n                              <div className=\"ml-3 flex-shrink-0 flex items-center gap-2\">\n                                {activity.type === 'habit' ? (\n                                  activity.isCompleted || completedHabits.has(activity._id) ? (\n                                    <div className=\"flex items-center gap-1 text-xs text-[#1E49C9] font-medium\">\n                                      <span className=\"text-[#1E49C9]\">✓</span>\n                                      <span>Done</span>\n                                    </div>\n                                  ) : (\n                                    <button\n                                      onClick={() => handleHabitComplete(activity)}\n                                      disabled={completingHabits.has(activity._id)}\n                                      className=\"text-xs px-3 py-1 bg-[#1E49C9]/10 border border-[#1E49C9]/30 text-[#1E49C9] rounded-md hover:bg-[#1E49C9]/20 hover:border-[#1E49C9]/50 transition-all duration-200 font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1\"\n                                    >\n                                      {completingHabits.has(activity._id) ? (\n                                        <>\n                                          <div className=\"animate-spin rounded-full h-3 w-3 border-b border-[#1E49C9]\"></div>\n                                          <span>Marking...</span>\n                                        </>\n                                      ) : (\n                                        'Mark'\n                                      )}\n                                    </button>\n                                  )\n                                ) : (\n                                  <div className=\"flex items-center gap-1 text-xs text-[#94A3B8]\">\n                                    <span>{activity.isCompleted ? '✓' : '⏳'}</span>\n                                    <span>{activity.isCompleted ? 'Done' : 'Pending'}</span>\n                                  </div>\n                                )}\n                                \n                                {/* Delete Button */}\n                                <button\n                                  onClick={() => handleDeleteActivity(activity)}\n                                  className=\"text-xs px-2 py-1 text-[#FF6B6B] hover:bg-[#FF6B6B]/10 rounded-md transition-colors\"\n                                  title={`Delete ${activity.type}`}\n                                >\n                                  <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                  </svg>\n                                </button>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <div className=\"text-center py-8 text-[#94A3B8]\">\n                          <div className=\"text-4xl mb-2\">📝</div>\n                          <p className=\"text-sm\">No activities yet</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                \n                  {/* Action Buttons - Moved below activities */}\n                  <div className=\"mt-auto pt-4 border-t border-[rgba(255,255,255,0.1)]\">\n                    <div className=\"flex gap-2\">\n                      <Button \n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleAddTaskToGoal(goal)}\n                        className=\"text-xs px-3 py-1 flex-1 border-[#1E49C9]/30 text-[#1E49C9] hover:bg-[#1E49C9]/10\"\n                      >\n                        + Add Task\n                      </Button>\n                      <Button \n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleAddHabitToGoal(goal)}\n                        className=\"text-xs px-3 py-1 flex-1 border-[#1E49C9]/30 text-[#1E49C9] hover:bg-[#1E49C9]/10\"\n                      >\n                        + Add Habit\n                      </Button>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            );\n          })\n        )}\n      </div>\n\n      {/* Create Habit Popup */}\n      <CreateHabitPopup\n        isOpen={showCreateHabitPopup}\n        onClose={() => {\n          setShowCreateHabitPopup(false);\n          setSelectedGoalForHabit(null);\n        }}\n        onHabitCreated={handleHabitCreated}\n        goals={goals}\n        selectedGoal={selectedGoalForHabit}\n      />\n\n      {/* Create Goal Popup */}\n      <CreateGoalPopup\n        isOpen={showCreateGoalPopup}\n        onClose={() => setShowCreateGoalPopup(false)}\n        onGoalCreated={handleGoalCreated}\n      />\n\n      {/* Create Task Popup */}\n      <CreateTaskPopup\n        isOpen={showCreateTaskPopup}\n        onClose={() => {\n          setShowCreateTaskPopup(false);\n          setSelectedGoalForTask(null);\n        }}\n        onTaskCreated={handleTaskCreated}\n        goalId={selectedGoalForTask?._id}\n        goalName={selectedGoalForTask?.name}\n      />\n\n      {/* Edit Goal Popup */}\n      <EditGoalPopup\n        isOpen={showEditGoalPopup}\n        onClose={() => {\n          setShowEditGoalPopup(false);\n          setSelectedGoalForEdit(null);\n        }}\n        onGoalUpdated={handleGoalUpdated}\n        goal={selectedGoalForEdit}\n      />\n    </div>\n  );\n};\n\nexport default GoalAlignedDay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}