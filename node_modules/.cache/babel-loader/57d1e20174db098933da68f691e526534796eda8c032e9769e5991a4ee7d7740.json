{"ast":null,"code":"import React,{useState,useEffect}from'react';import{motion}from'framer-motion';import{DollarSign,TrendingUp,TrendingDown,CreditCard,Target}from'lucide-react';import{useAuth}from'../../contexts/AuthContext';import{buildApiUrl}from'../../config';import axios from'axios';import Card from'../ui/Card';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FinancialOverview=()=>{const{token}=useAuth();const[financialData,setFinancialData]=useState({summary:{},recentExpenses:[],goals:[],monthlyExpenses:[],impulseBuys:0});const[loading,setLoading]=useState(true);useEffect(()=>{fetchFinancialData();},[]);const fetchFinancialData=async()=>{try{setLoading(true);// Get current month date range\nconst now=new Date();const startOfMonth=new Date(now.getFullYear(),now.getMonth(),1);const endOfMonth=new Date(now.getFullYear(),now.getMonth()+1,0);const startDate=startOfMonth.toISOString().split('T')[0];const endDate=endOfMonth.toISOString().split('T')[0];const[summaryRes,expensesRes,goalsRes,monthlyExpensesRes]=await Promise.all([axios.get(buildApiUrl('/api/finance/summary'),{headers:{Authorization:\"Bearer \".concat(token)}}),axios.get(buildApiUrl('/api/finance/expenses?limit=5'),{headers:{Authorization:\"Bearer \".concat(token)}}),axios.get(buildApiUrl('/api/finance/goals'),{headers:{Authorization:\"Bearer \".concat(token)}}),axios.get(buildApiUrl(\"/api/finance/expenses?startDate=\".concat(startDate,\"&endDate=\").concat(endDate)),{headers:{Authorization:\"Bearer \".concat(token)}})]);// Calculate impulse buys for current month\nconst monthlyExpenses=monthlyExpensesRes.data||[];const impulseBuys=calculateImpulseBuys(monthlyExpenses);setFinancialData({summary:summaryRes.data,recentExpenses:expensesRes.data||[],goals:goalsRes.data||[],monthlyExpenses:monthlyExpenses,impulseBuys:impulseBuys});}catch(error){console.error('Error fetching financial data:',error);}finally{setLoading(false);}};const calculateImpulseBuys=expenses=>{// Count expenses that were explicitly marked as impulse buys by the user\nreturn expenses.filter(expense=>expense.impulseBuy===true).length;};const getExpenseGoalDisplayLabel=goal=>{var _goal$category,_goal$category2;// Map category values to display labels\nconst categoryLabels={'nourishing_food':'Nourishing food','safe_convenient_travel':'Safe, convenient travel','safe_comfortable_home':'Safe, comfortable and peaceful home','living_essentials':'Maintain living essentials','healthcare_wellbeing':'Long term wellbeing and protective healthcare','enjoy_life':'Enjoy life, have fun','value_shopping':'Value, comfort or joyful shopping','learning_growing':'Learning, growing and investing in my future','exploring_places':'Exploring new places','prepare_unexpected':'Prepare for the unexpected','other':'Other'};// Use custom notes if available, otherwise use the mapped category label\nreturn goal.notes||categoryLabels[goal.category]||((_goal$category=goal.category)===null||_goal$category===void 0?void 0:_goal$category.charAt(0).toUpperCase())+((_goal$category2=goal.category)===null||_goal$category2===void 0?void 0:_goal$category2.slice(1))||'Goal';};const getTop3ExpenseGoals=()=>{return financialData.goals.sort((a,b)=>b.amount-a.amount).slice(0,3);};const calculateGoalProgress=goal=>{// Calculate how much has been spent in this category this month\nconst categoryExpenses=financialData.monthlyExpenses.filter(expense=>expense.category===goal.category);const totalSpent=categoryExpenses.reduce((sum,expense)=>sum+(expense.amount||0),0);const goalAmount=goal.amount||0;if(goalAmount===0)return 0;return Math.min(100,Math.round(totalSpent/goalAmount*100));};const calculateBudgetAdherence=()=>{const{totalExpenses=0,monthlyBudget=0}=financialData.summary;if(monthlyBudget===0)return 0;return Math.max(0,Math.min(100,(monthlyBudget-totalExpenses)/monthlyBudget*100));};const formatCurrency=amount=>{return new Intl.NumberFormat('en-IN',{style:'currency',currency:'INR',maximumFractionDigits:0}).format(amount);};if(loading){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"animate-pulse\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-4 bg-[#2A313A] rounded w-1/3 mb-4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-8 bg-[#2A313A] rounded\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-4 bg-[#2A313A] rounded w-2/3\"})]})]})});}const budgetAdherence=calculateBudgetAdherence();const isOverBudget=budgetAdherence<0;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-4\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/finance\",className:\"font-jakarta text-sm leading-relaxed tracking-wider text-[#1E49C9] hover:text-[#1E49C9]/80 font-medium flex items-center\",children:\"VIEW DETAILS\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#0A0C0F] border border-[#2A313A] rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-jakarta text-sm leading-relaxed tracking-wider text-text-primary font-medium\",children:\"Impulse Buys This Month\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(CreditCard,{className:\"h-4 w-4 text-[#D64545]\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-jakarta text-2xl font-bold text-[#D64545]\",children:financialData.impulseBuys})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-text-secondary\",children:\"Unplanned purchases detected this month\"})]}),getTop3ExpenseGoals().length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-jakarta text-2xl leading-normal text-text-primary font-bold tracking-wide flex items-center\",children:[/*#__PURE__*/_jsx(Target,{className:\"h-4 w-4 mr-2 text-[#1E49C9]\"}),\"Top Expense Goals\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:getTop3ExpenseGoals().map((goal,index)=>{const progress=calculateGoalProgress(goal);const isOverBudget=progress>100;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-[#0A0C0F] rounded border border-[#2A313A]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-jakarta text-sm leading-relaxed text-text-primary font-medium\",children:getExpenseGoalDisplayLabel(goal)}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-jakarta text-sm font-bold \".concat(isOverBudget?'text-[#D64545]':progress>80?'text-[#FFD200]':'text-[#1E49C9]'),children:[progress,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-jakarta text-sm leading-relaxed tracking-wider font-medium text-[#1E49C9]\",children:formatCurrency(goal.amount||0)}),/*#__PURE__*/_jsx(\"div\",{className:\"w-16 bg-[#2A313A] rounded-full h-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-1 rounded-full transition-all duration-500 \".concat(isOverBudget?'bg-[#D64545]':progress>80?'bg-[#FFD200]':'bg-[#1E49C9]'),style:{width:\"\".concat(Math.min(100,progress),\"%\")}})})]}),goal.notes&&goal.category&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-xs text-text-secondary\",children:[\"Category: \",goal.category.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())]})]},goal._id||index);})})]}),financialData.goals.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(Target,{className:\"h-8 w-8 text-text-secondary mx-auto mb-2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-jakarta text-sm text-text-secondary\",children:\"No expense goals set yet\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/finance\",className:\"font-jakarta text-xs text-[#1E49C9] hover:text-[#1E49C9]/80 leading-relaxed tracking-wider\",children:\"SET GOALS\"})]})]})]});};export default FinancialOverview;","map":{"version":3,"names":["React","useState","useEffect","motion","DollarSign","TrendingUp","TrendingDown","CreditCard","Target","useAuth","buildApiUrl","axios","Card","jsx","_jsx","jsxs","_jsxs","FinancialOverview","token","financialData","setFinancialData","summary","recentExpenses","goals","monthlyExpenses","impulseBuys","loading","setLoading","fetchFinancialData","now","Date","startOfMonth","getFullYear","getMonth","endOfMonth","startDate","toISOString","split","endDate","summaryRes","expensesRes","goalsRes","monthlyExpensesRes","Promise","all","get","headers","Authorization","concat","data","calculateImpulseBuys","error","console","expenses","filter","expense","impulseBuy","length","getExpenseGoalDisplayLabel","goal","_goal$category","_goal$category2","categoryLabels","notes","category","charAt","toUpperCase","slice","getTop3ExpenseGoals","sort","a","b","amount","calculateGoalProgress","categoryExpenses","totalSpent","reduce","sum","goalAmount","Math","min","round","calculateBudgetAdherence","totalExpenses","monthlyBudget","max","formatCurrency","Intl","NumberFormat","style","currency","maximumFractionDigits","format","children","className","budgetAdherence","isOverBudget","href","map","index","progress","width","replace","l","_id"],"sources":["/Users/priyas/Desktop/untangle-platform/src/components/dashboard/FinancialOverview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { DollarSign, TrendingUp, TrendingDown, CreditCard, Target } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { buildApiUrl } from '../../config';\nimport axios from 'axios';\nimport Card from '../ui/Card';\n\nconst FinancialOverview = () => {\n  const { token } = useAuth();\n  const [financialData, setFinancialData] = useState({\n    summary: {},\n    recentExpenses: [],\n    goals: [],\n    monthlyExpenses: [],\n    impulseBuys: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchFinancialData();\n  }, []);\n\n  const fetchFinancialData = async () => {\n    try {\n      setLoading(true);\n      \n      // Get current month date range\n      const now = new Date();\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      const startDate = startOfMonth.toISOString().split('T')[0];\n      const endDate = endOfMonth.toISOString().split('T')[0];\n      \n      const [summaryRes, expensesRes, goalsRes, monthlyExpensesRes] = await Promise.all([\n        axios.get(buildApiUrl('/api/finance/summary'), {\n          headers: { Authorization: `Bearer ${token}` }\n        }),\n        axios.get(buildApiUrl('/api/finance/expenses?limit=5'), {\n          headers: { Authorization: `Bearer ${token}` }\n        }),\n        axios.get(buildApiUrl('/api/finance/goals'), {\n          headers: { Authorization: `Bearer ${token}` }\n        }),\n        axios.get(buildApiUrl(`/api/finance/expenses?startDate=${startDate}&endDate=${endDate}`), {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n      ]);\n\n      // Calculate impulse buys for current month\n      const monthlyExpenses = monthlyExpensesRes.data || [];\n      const impulseBuys = calculateImpulseBuys(monthlyExpenses);\n\n      setFinancialData({\n        summary: summaryRes.data,\n        recentExpenses: expensesRes.data || [],\n        goals: goalsRes.data || [],\n        monthlyExpenses: monthlyExpenses,\n        impulseBuys: impulseBuys\n      });\n    } catch (error) {\n      console.error('Error fetching financial data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateImpulseBuys = (expenses) => {\n    // Count expenses that were explicitly marked as impulse buys by the user\n    return expenses.filter(expense => expense.impulseBuy === true).length;\n  };\n\n  const getExpenseGoalDisplayLabel = (goal) => {\n    // Map category values to display labels\n    const categoryLabels = {\n      'nourishing_food': 'Nourishing food',\n      'safe_convenient_travel': 'Safe, convenient travel',\n      'safe_comfortable_home': 'Safe, comfortable and peaceful home',\n      'living_essentials': 'Maintain living essentials',\n      'healthcare_wellbeing': 'Long term wellbeing and protective healthcare',\n      'enjoy_life': 'Enjoy life, have fun',\n      'value_shopping': 'Value, comfort or joyful shopping',\n      'learning_growing': 'Learning, growing and investing in my future',\n      'exploring_places': 'Exploring new places',\n      'prepare_unexpected': 'Prepare for the unexpected',\n      'other': 'Other'\n    };\n    \n    // Use custom notes if available, otherwise use the mapped category label\n    return goal.notes || categoryLabels[goal.category] || goal.category?.charAt(0).toUpperCase() + goal.category?.slice(1) || 'Goal';\n  };\n\n  const getTop3ExpenseGoals = () => {\n    return financialData.goals\n      .sort((a, b) => b.amount - a.amount)\n      .slice(0, 3);\n  };\n\n  const calculateGoalProgress = (goal) => {\n    // Calculate how much has been spent in this category this month\n    const categoryExpenses = financialData.monthlyExpenses.filter(expense => \n      expense.category === goal.category\n    );\n    \n    const totalSpent = categoryExpenses.reduce((sum, expense) => sum + (expense.amount || 0), 0);\n    const goalAmount = goal.amount || 0;\n    \n    if (goalAmount === 0) return 0;\n    \n    return Math.min(100, Math.round((totalSpent / goalAmount) * 100));\n  };\n\n  const calculateBudgetAdherence = () => {\n    const { totalExpenses = 0, monthlyBudget = 0 } = financialData.summary;\n    if (monthlyBudget === 0) return 0;\n    return Math.max(0, Math.min(100, ((monthlyBudget - totalExpenses) / monthlyBudget) * 100));\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-[#2A313A] rounded w-1/3 mb-4\"></div>\n          <div className=\"space-y-3\">\n            <div className=\"h-8 bg-[#2A313A] rounded\"></div>\n            <div className=\"h-4 bg-[#2A313A] rounded w-2/3\"></div>\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  const budgetAdherence = calculateBudgetAdherence();\n  const isOverBudget = budgetAdherence < 0;\n\n  return (\n    <Card>\n      {/* Header Action */}\n      <div className=\"flex justify-end mb-4\">\n        <a \n          href=\"/finance\" \n          className=\"font-jakarta text-sm leading-relaxed tracking-wider text-[#1E49C9] hover:text-[#1E49C9]/80 font-medium flex items-center\"\n        >\n          VIEW DETAILS\n        </a>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Impulse Buys This Month */}\n        <div className=\"bg-[#0A0C0F] border border-[#2A313A] rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"font-jakarta text-sm leading-relaxed tracking-wider text-text-primary font-medium\">Impulse Buys This Month</span>\n            <div className=\"flex items-center space-x-2\">\n              <CreditCard className=\"h-4 w-4 text-[#D64545]\" />\n              <span className=\"font-jakarta text-2xl font-bold text-[#D64545]\">\n                {financialData.impulseBuys}\n              </span>\n            </div>\n          </div>\n          <div className=\"text-xs text-text-secondary\">\n            Unplanned purchases detected this month\n          </div>\n        </div>\n\n        {/* Top 3 Expense Goals */}\n        {getTop3ExpenseGoals().length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"font-jakarta text-2xl leading-normal text-text-primary font-bold tracking-wide flex items-center\">\n              <Target className=\"h-4 w-4 mr-2 text-[#1E49C9]\" />\n              Top Expense Goals\n            </h4>\n            <div className=\"space-y-2\">\n              {getTop3ExpenseGoals().map((goal, index) => {\n                const progress = calculateGoalProgress(goal);\n                const isOverBudget = progress > 100;\n                \n                return (\n                  <div key={goal._id || index} className=\"p-3 bg-[#0A0C0F] rounded border border-[#2A313A]\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"font-jakarta text-sm leading-relaxed text-text-primary font-medium\">\n                        {getExpenseGoalDisplayLabel(goal)}\n                      </span>\n                      <span className={`font-jakarta text-sm font-bold ${\n                        isOverBudget ? 'text-[#D64545]' : progress > 80 ? 'text-[#FFD200]' : 'text-[#1E49C9]'\n                      }`}>\n                        {progress}%\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"font-jakarta text-sm leading-relaxed tracking-wider font-medium text-[#1E49C9]\">\n                        {formatCurrency(goal.amount || 0)}\n                      </span>\n                      <div className=\"w-16 bg-[#2A313A] rounded-full h-1\">\n                        <div \n                          className={`h-1 rounded-full transition-all duration-500 ${\n                            isOverBudget ? 'bg-[#D64545]' : progress > 80 ? 'bg-[#FFD200]' : 'bg-[#1E49C9]'\n                          }`}\n                          style={{ width: `${Math.min(100, progress)}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                    {goal.notes && goal.category && (\n                      <div className=\"mt-1 text-xs text-text-secondary\">\n                        Category: {goal.category.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n\n        {/* No Data State */}\n        {financialData.goals.length === 0 && (\n          <div className=\"text-center py-4\">\n            <Target className=\"h-8 w-8 text-text-secondary mx-auto mb-2\" />\n            <p className=\"font-jakarta text-sm text-text-secondary\">No expense goals set yet</p>\n            <a \n              href=\"/finance\" \n              className=\"font-jakarta text-xs text-[#1E49C9] hover:text-[#1E49C9]/80 leading-relaxed tracking-wider\"\n            >\n              SET GOALS\n            </a>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default FinancialOverview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}