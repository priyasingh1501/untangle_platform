{"ast":null,"code":"import _objectSpread from\"/Users/priyas/Desktop/untangle-platform/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{X,Save,AlertCircle,CheckCircle}from'lucide-react';import{Card,Button,Input,Textarea}from'../ui';import{buildApiUrl}from'../../config';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CreateCustomFood=_ref=>{let{isOpen,onClose,onFoodCreated,searchQuery=''}=_ref;const{token}=useAuth();const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[validationErrors,setValidationErrors]=useState({});// Form state\nconst[formData,setFormData]=useState({name:searchQuery,nutrients:{kcal:'',protein:'',fat:'',carbs:'',fiber:'',sugar:'',vitaminC:'',zinc:'',selenium:'',iron:'',omega3:''},portionGramsDefault:100,tags:'',gi:'',fodmap:'Unknown',novaClass:1,aliases:''});const handleInputChange=(field,value)=>{if(field.startsWith('nutrients.')){const nutrient=field.split('.')[1];setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{nutrients:_objectSpread(_objectSpread({},prev.nutrients),{},{[nutrient]:value})}));}else{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));}};const validateForm=()=>{const errors={};// Validate required fields\nif(!formData.name.trim()){errors.name='Food name is required';}// Validate required nutrients\nconst requiredNutrients=['kcal','protein','fat','carbs'];requiredNutrients.forEach(nutrient=>{const value=formData.nutrients[nutrient];if(!value||value===''){errors[\"nutrients.\".concat(nutrient)]=\"\".concat(nutrient.charAt(0).toUpperCase()+nutrient.slice(1),\" is required\");}else{const numValue=parseFloat(value);if(isNaN(numValue)||numValue<0){errors[\"nutrients.\".concat(nutrient)]='Must be a valid positive number';}}});// Validate portion size\nconst portionSize=parseFloat(formData.portionGramsDefault);if(isNaN(portionSize)||portionSize<1||portionSize>10000){errors.portionGramsDefault='Portion size must be between 1 and 10,000 grams';}// Validate GI if provided\nif(formData.gi&&formData.gi!==''){const giValue=parseFloat(formData.gi);if(isNaN(giValue)||giValue<0||giValue>110){errors.gi='Glycemic Index must be between 0 and 110';}}setValidationErrors(errors);return Object.keys(errors).length===0;};const handleSubmit=async e=>{e.preventDefault();if(!validateForm()){return;}setIsLoading(true);setError('');setSuccess('');setValidationErrors({});try{// Prepare data for API\nconst apiData=_objectSpread(_objectSpread({},formData),{},{nutrients:Object.fromEntries(Object.entries(formData.nutrients).map(_ref2=>{let[key,value]=_ref2;return[key,value===''?0:parseFloat(value)||0];})),tags:formData.tags?formData.tags.split(',').map(tag=>tag.trim()):[],aliases:formData.aliases?formData.aliases.split(',').map(alias=>alias.trim()):[],gi:formData.gi?parseFloat(formData.gi):null,portionGramsDefault:parseFloat(formData.portionGramsDefault)||100});const response=await fetch(buildApiUrl('/api/food/custom'),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify(apiData)});const data=await response.json();if(!response.ok){throw new Error(data.message||'Failed to create custom food');}setSuccess('Custom food item created successfully!');// Call callback to refresh search results or add to meal\nif(onFoodCreated){onFoodCreated(data.food);}// Reset form after a short delay\nsetTimeout(()=>{setFormData({name:'',nutrients:{kcal:'',protein:'',fat:'',carbs:'',fiber:'',sugar:'',vitaminC:'',zinc:'',selenium:'',iron:'',omega3:''},portionGramsDefault:100,tags:'',gi:'',fodmap:'Unknown',novaClass:1,aliases:''});setSuccess('');onClose();},1500);}catch(err){setError(err.message);}finally{setIsLoading(false);}};const handleClose=()=>{setError('');setSuccess('');onClose();};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsx(Card,{variant:\"elevated\",className:\"w-full max-w-2xl max-h-[90vh] overflow-y-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800\",children:\"Create Custom Food Item\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClose,className:\"p-2 text-gray-400 hover:text-gray-600 transition-colors\",children:/*#__PURE__*/_jsx(X,{className:\"w-6 h-6\"})})]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-[#1E49C9]/10 border border-[#1E49C9]/30 rounded-lg flex items-center gap-2 text-[#1E49C9]\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5\"}),success]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-5 h-5\"}),error]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-700\",children:\"Basic Information\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Food Name *\",value:formData.name,onChange:e=>handleInputChange('name',e.target.value),placeholder:\"e.g., Homemade Chicken Curry\",required:true,className:validationErrors.name?'border-red-500':''}),validationErrors.name&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Default Portion (grams)\",type:\"number\",value:formData.portionGramsDefault,onChange:e=>handleInputChange('portionGramsDefault',e.target.value),placeholder:\"100\",className:validationErrors.portionGramsDefault?'border-red-500':''}),validationErrors.portionGramsDefault&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.portionGramsDefault})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Glycemic Index (optional)\",type:\"number\",value:formData.gi,onChange:e=>handleInputChange('gi',e.target.value),placeholder:\"e.g., 55\",className:validationErrors.gi?'border-red-500':''}),validationErrors.gi&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.gi})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"FODMAP Level\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.fodmap,onChange:e=>handleInputChange('fodmap',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Unknown\",children:\"Unknown\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Low\",children:\"Low\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High\",children:\"High\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"NOVA Classification\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.novaClass,onChange:e=>handleInputChange('novaClass',parseInt(e.target.value)),className:\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:1,children:\"1 - Unprocessed/Minimally Processed\"}),/*#__PURE__*/_jsx(\"option\",{value:2,children:\"2 - Processed Culinary Ingredients\"}),/*#__PURE__*/_jsx(\"option\",{value:3,children:\"3 - Processed Foods\"}),/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4 - Ultra-Processed Foods\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsx(Input,{label:\"Tags (comma-separated)\",value:formData.tags,onChange:e=>handleInputChange('tags',e.target.value),placeholder:\"e.g., indian, curry, homemade\"}),/*#__PURE__*/_jsx(Input,{label:\"Aliases (comma-separated)\",value:formData.aliases,onChange:e=>handleInputChange('aliases',e.target.value),placeholder:\"e.g., chicken curry, curry chicken\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-700\",children:\"Nutritional Information (per 100g)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Enter nutritional values per 100g. Leave empty for 0.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Calories (kcal) *\",type:\"number\",step:\"0.1\",value:formData.nutrients.kcal,onChange:e=>handleInputChange('nutrients.kcal',e.target.value),placeholder:\"0\",required:true,className:validationErrors['nutrients.kcal']?'border-red-500':''}),validationErrors['nutrients.kcal']&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors['nutrients.kcal']})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Protein (g) *\",type:\"number\",step:\"0.1\",value:formData.nutrients.protein,onChange:e=>handleInputChange('nutrients.protein',e.target.value),placeholder:\"0\",required:true,className:validationErrors['nutrients.protein']?'border-red-500':''}),validationErrors['nutrients.protein']&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors['nutrients.protein']})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Fat (g) *\",type:\"number\",step:\"0.1\",value:formData.nutrients.fat,onChange:e=>handleInputChange('nutrients.fat',e.target.value),placeholder:\"0\",required:true,className:validationErrors['nutrients.fat']?'border-red-500':''}),validationErrors['nutrients.fat']&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors['nutrients.fat']})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{label:\"Carbs (g) *\",type:\"number\",step:\"0.1\",value:formData.nutrients.carbs,onChange:e=>handleInputChange('nutrients.carbs',e.target.value),placeholder:\"0\",required:true,className:validationErrors['nutrients.carbs']?'border-red-500':''}),validationErrors['nutrients.carbs']&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors['nutrients.carbs']})]}),/*#__PURE__*/_jsx(Input,{label:\"Fiber (g)\",type:\"number\",step:\"0.1\",value:formData.nutrients.fiber,onChange:e=>handleInputChange('nutrients.fiber',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Sugar (g)\",type:\"number\",step:\"0.1\",value:formData.nutrients.sugar,onChange:e=>handleInputChange('nutrients.sugar',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Vitamin C (mg)\",type:\"number\",step:\"0.1\",value:formData.nutrients.vitaminC,onChange:e=>handleInputChange('nutrients.vitaminC',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Zinc (mg)\",type:\"number\",step:\"0.1\",value:formData.nutrients.zinc,onChange:e=>handleInputChange('nutrients.zinc',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Selenium (\\u03BCg)\",type:\"number\",step:\"0.1\",value:formData.nutrients.selenium,onChange:e=>handleInputChange('nutrients.selenium',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Iron (mg)\",type:\"number\",step:\"0.1\",value:formData.nutrients.iron,onChange:e=>handleInputChange('nutrients.iron',e.target.value),placeholder:\"0\"}),/*#__PURE__*/_jsx(Input,{label:\"Omega-3 (g)\",type:\"number\",step:\"0.1\",value:formData.nutrients.omega3,onChange:e=>handleInputChange('nutrients.omega3',e.target.value),placeholder:\"0\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3 pt-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:handleClose,disabled:isLoading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",disabled:isLoading,className:\"flex items-center gap-2\",children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"}),\"Creating...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Save,{className:\"w-4 h-4\"}),\"Create Food Item\"]})})]})]})]})})});};export default CreateCustomFood;","map":{"version":3,"names":["React","useState","X","Save","AlertCircle","CheckCircle","Card","Button","Input","Textarea","buildApiUrl","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateCustomFood","_ref","isOpen","onClose","onFoodCreated","searchQuery","token","isLoading","setIsLoading","error","setError","success","setSuccess","validationErrors","setValidationErrors","formData","setFormData","name","nutrients","kcal","protein","fat","carbs","fiber","sugar","vitaminC","zinc","selenium","iron","omega3","portionGramsDefault","tags","gi","fodmap","novaClass","aliases","handleInputChange","field","value","startsWith","nutrient","split","prev","_objectSpread","validateForm","errors","trim","requiredNutrients","forEach","concat","charAt","toUpperCase","slice","numValue","parseFloat","isNaN","portionSize","giValue","Object","keys","length","handleSubmit","e","preventDefault","apiData","fromEntries","entries","map","_ref2","key","tag","alias","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","food","setTimeout","err","handleClose","className","children","variant","onClick","onSubmit","label","onChange","target","placeholder","required","type","parseInt","step","disabled"],"sources":["/Users/priyas/Desktop/untangle-platform/src/components/food/CreateCustomFood.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { X, Save, AlertCircle, CheckCircle } from 'lucide-react';\nimport { Card, Button, Input, Textarea } from '../ui';\nimport { buildApiUrl } from '../../config';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst CreateCustomFood = ({ isOpen, onClose, onFoodCreated, searchQuery = '' }) => {\n  const { token } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [validationErrors, setValidationErrors] = useState({});\n\n  // Form state\n  const [formData, setFormData] = useState({\n    name: searchQuery,\n    nutrients: {\n      kcal: '',\n      protein: '',\n      fat: '',\n      carbs: '',\n      fiber: '',\n      sugar: '',\n      vitaminC: '',\n      zinc: '',\n      selenium: '',\n      iron: '',\n      omega3: ''\n    },\n    portionGramsDefault: 100,\n    tags: '',\n    gi: '',\n    fodmap: 'Unknown',\n    novaClass: 1,\n    aliases: ''\n  });\n\n  const handleInputChange = (field, value) => {\n    if (field.startsWith('nutrients.')) {\n      const nutrient = field.split('.')[1];\n      setFormData(prev => ({\n        ...prev,\n        nutrients: {\n          ...prev.nutrients,\n          [nutrient]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    // Validate required fields\n    if (!formData.name.trim()) {\n      errors.name = 'Food name is required';\n    }\n    \n    // Validate required nutrients\n    const requiredNutrients = ['kcal', 'protein', 'fat', 'carbs'];\n    requiredNutrients.forEach(nutrient => {\n      const value = formData.nutrients[nutrient];\n      if (!value || value === '') {\n        errors[`nutrients.${nutrient}`] = `${nutrient.charAt(0).toUpperCase() + nutrient.slice(1)} is required`;\n      } else {\n        const numValue = parseFloat(value);\n        if (isNaN(numValue) || numValue < 0) {\n          errors[`nutrients.${nutrient}`] = 'Must be a valid positive number';\n        }\n      }\n    });\n\n    // Validate portion size\n    const portionSize = parseFloat(formData.portionGramsDefault);\n    if (isNaN(portionSize) || portionSize < 1 || portionSize > 10000) {\n      errors.portionGramsDefault = 'Portion size must be between 1 and 10,000 grams';\n    }\n\n    // Validate GI if provided\n    if (formData.gi && formData.gi !== '') {\n      const giValue = parseFloat(formData.gi);\n      if (isNaN(giValue) || giValue < 0 || giValue > 110) {\n        errors.gi = 'Glycemic Index must be between 0 and 110';\n      }\n    }\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n    setValidationErrors({});\n\n    try {\n      // Prepare data for API\n      const apiData = {\n        ...formData,\n        nutrients: Object.fromEntries(\n          Object.entries(formData.nutrients).map(([key, value]) => [\n            key,\n            value === '' ? 0 : parseFloat(value) || 0\n          ])\n        ),\n        tags: formData.tags ? formData.tags.split(',').map(tag => tag.trim()) : [],\n        aliases: formData.aliases ? formData.aliases.split(',').map(alias => alias.trim()) : [],\n        gi: formData.gi ? parseFloat(formData.gi) : null,\n        portionGramsDefault: parseFloat(formData.portionGramsDefault) || 100\n      };\n\n      const response = await fetch(buildApiUrl('/api/food/custom'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(apiData)\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to create custom food');\n      }\n\n      setSuccess('Custom food item created successfully!');\n      \n      // Call callback to refresh search results or add to meal\n      if (onFoodCreated) {\n        onFoodCreated(data.food);\n      }\n\n      // Reset form after a short delay\n      setTimeout(() => {\n        setFormData({\n          name: '',\n          nutrients: {\n            kcal: '',\n            protein: '',\n            fat: '',\n            carbs: '',\n            fiber: '',\n            sugar: '',\n            vitaminC: '',\n            zinc: '',\n            selenium: '',\n            iron: '',\n            omega3: ''\n          },\n          portionGramsDefault: 100,\n          tags: '',\n          gi: '',\n          fodmap: 'Unknown',\n          novaClass: 1,\n          aliases: ''\n        });\n        setSuccess('');\n        onClose();\n      }, 1500);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    setError('');\n    setSuccess('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <Card variant=\"elevated\" className=\"w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-800\">Create Custom Food Item</h2>\n            <button\n              onClick={handleClose}\n              className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n\n          {/* Success/Error Messages */}\n          {success && (\n            <div className=\"mb-4 p-3 bg-[#1E49C9]/10 border border-[#1E49C9]/30 rounded-lg flex items-center gap-2 text-[#1E49C9]\">\n              <CheckCircle className=\"w-5 h-5\" />\n              {success}\n            </div>\n          )}\n\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\">\n              <AlertCircle className=\"w-5 h-5\" />\n              {error}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-700\">Basic Information</h3>\n              \n              <div>\n                <Input\n                  label=\"Food Name *\"\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  placeholder=\"e.g., Homemade Chicken Curry\"\n                  required\n                  className={validationErrors.name ? 'border-red-500' : ''}\n                />\n                {validationErrors.name && (\n                  <p className=\"text-red-500 text-sm mt-1\">{validationErrors.name}</p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Input\n                    label=\"Default Portion (grams)\"\n                    type=\"number\"\n                    value={formData.portionGramsDefault}\n                    onChange={(e) => handleInputChange('portionGramsDefault', e.target.value)}\n                    placeholder=\"100\"\n                    className={validationErrors.portionGramsDefault ? 'border-red-500' : ''}\n                  />\n                  {validationErrors.portionGramsDefault && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors.portionGramsDefault}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Input\n                    label=\"Glycemic Index (optional)\"\n                    type=\"number\"\n                    value={formData.gi}\n                    onChange={(e) => handleInputChange('gi', e.target.value)}\n                    placeholder=\"e.g., 55\"\n                    className={validationErrors.gi ? 'border-red-500' : ''}\n                  />\n                  {validationErrors.gi && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors.gi}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    FODMAP Level\n                  </label>\n                  <select\n                    value={formData.fodmap}\n                    onChange={(e) => handleInputChange('fodmap', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"Unknown\">Unknown</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    NOVA Classification\n                  </label>\n                  <select\n                    value={formData.novaClass}\n                    onChange={(e) => handleInputChange('novaClass', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value={1}>1 - Unprocessed/Minimally Processed</option>\n                    <option value={2}>2 - Processed Culinary Ingredients</option>\n                    <option value={3}>3 - Processed Foods</option>\n                    <option value={4}>4 - Ultra-Processed Foods</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Input\n                  label=\"Tags (comma-separated)\"\n                  value={formData.tags}\n                  onChange={(e) => handleInputChange('tags', e.target.value)}\n                  placeholder=\"e.g., indian, curry, homemade\"\n                />\n\n                <Input\n                  label=\"Aliases (comma-separated)\"\n                  value={formData.aliases}\n                  onChange={(e) => handleInputChange('aliases', e.target.value)}\n                  placeholder=\"e.g., chicken curry, curry chicken\"\n                />\n              </div>\n            </div>\n\n            {/* Nutritional Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-700\">Nutritional Information (per 100g)</h3>\n              <p className=\"text-sm text-gray-600\">Enter nutritional values per 100g. Leave empty for 0.</p>\n              \n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div>\n                  <Input\n                    label=\"Calories (kcal) *\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={formData.nutrients.kcal}\n                    onChange={(e) => handleInputChange('nutrients.kcal', e.target.value)}\n                    placeholder=\"0\"\n                    required\n                    className={validationErrors['nutrients.kcal'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['nutrients.kcal'] && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors['nutrients.kcal']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Input\n                    label=\"Protein (g) *\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={formData.nutrients.protein}\n                    onChange={(e) => handleInputChange('nutrients.protein', e.target.value)}\n                    placeholder=\"0\"\n                    required\n                    className={validationErrors['nutrients.protein'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['nutrients.protein'] && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors['nutrients.protein']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Input\n                    label=\"Fat (g) *\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={formData.nutrients.fat}\n                    onChange={(e) => handleInputChange('nutrients.fat', e.target.value)}\n                    placeholder=\"0\"\n                    required\n                    className={validationErrors['nutrients.fat'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['nutrients.fat'] && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors['nutrients.fat']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Input\n                    label=\"Carbs (g) *\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={formData.nutrients.carbs}\n                    onChange={(e) => handleInputChange('nutrients.carbs', e.target.value)}\n                    placeholder=\"0\"\n                    required\n                    className={validationErrors['nutrients.carbs'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['nutrients.carbs'] && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors['nutrients.carbs']}</p>\n                  )}\n                </div>\n\n                <Input\n                  label=\"Fiber (g)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.fiber}\n                  onChange={(e) => handleInputChange('nutrients.fiber', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Sugar (g)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.sugar}\n                  onChange={(e) => handleInputChange('nutrients.sugar', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Vitamin C (mg)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.vitaminC}\n                  onChange={(e) => handleInputChange('nutrients.vitaminC', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Zinc (mg)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.zinc}\n                  onChange={(e) => handleInputChange('nutrients.zinc', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Selenium (μg)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.selenium}\n                  onChange={(e) => handleInputChange('nutrients.selenium', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Iron (mg)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.iron}\n                  onChange={(e) => handleInputChange('nutrients.iron', e.target.value)}\n                  placeholder=\"0\"\n                />\n\n                <Input\n                  label=\"Omega-3 (g)\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.nutrients.omega3}\n                  onChange={(e) => handleInputChange('nutrients.omega3', e.target.value)}\n                  placeholder=\"0\"\n                />\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-4 border-t border-gray-200\">\n              <Button\n                type=\"button\"\n                variant=\"secondary\"\n                onClick={handleClose}\n                disabled={isLoading}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                disabled={isLoading}\n                className=\"flex items-center gap-2\"\n              >\n                {isLoading ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                    Creating...\n                  </>\n                ) : (\n                  <>\n                    <Save className=\"w-4 h-4\" />\n                    Create Food Item\n                  </>\n                )}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default CreateCustomFood;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}